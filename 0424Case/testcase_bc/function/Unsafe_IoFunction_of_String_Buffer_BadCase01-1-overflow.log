GlobalICFGNode0
CopyStmt: [Var1 <-- Var0]	
 i8* null { constant data }
AddrStmt: [Var4 <-- Var6]	
 @__const.Unsafe_IoFunction_of_String_Buffer_case01_Bad_01.cmd = private unnamed_addr constant [20 x i8] c"/usr/bin/cat\00\00\00\00\00\00\00\00", align 16 { Glob  }
AddrStmt: [Var31 <-- Var33]	
 @__const.main.userinput = private unnamed_addr constant [10 x i8] c"hello\00\00\00\00\00", align 1 { Glob  }
AddrStmt: [Var58 <-- Var59]	
 i64 20 { constant data }
AddrStmt: [Var60 <-- Var61]	
 i1 false { constant data }
AddrStmt: [Var96 <-- Var97]	
 i64 10 { constant data }
AddrStmt: [Var19 <-- Var20]	
 i8 105 { constant data }
AddrStmt: [Var7 <-- Var8]	
 i32 0 { constant data }
AddrStmt: [Var9 <-- Var10]	
 i8 47 { constant data }
AddrStmt: [Var11 <-- Var12]	
 i8 117 { constant data }
AddrStmt: [Var13 <-- Var14]	
 i8 115 { constant data }
AddrStmt: [Var15 <-- Var16]	
 i8 114 { constant data }
AddrStmt: [Var17 <-- Var18]	
 i8 98 { constant data }
AddrStmt: [Var21 <-- Var22]	
 i8 110 { constant data }
AddrStmt: [Var23 <-- Var24]	
 i8 99 { constant data }
AddrStmt: [Var25 <-- Var26]	
 i8 97 { constant data }
AddrStmt: [Var27 <-- Var28]	
 i8 116 { constant data }
AddrStmt: [Var29 <-- Var30]	
 i8 0 { constant data }
AddrStmt: [Var34 <-- Var35]	
 i8 104 { constant data }
AddrStmt: [Var36 <-- Var37]	
 i8 101 { constant data }
AddrStmt: [Var38 <-- Var39]	
 i8 108 { constant data }
AddrStmt: [Var40 <-- Var41]	
 i8 111 { constant data }
AddrStmt: [Var48 <-- Var49]	
 i32 1 { constant data }
AddrStmt: [Var65 <-- Var66]	
 i64 0 { constant data }
GepStmt: [Var101 <-- Var4]	
 @__const.Unsafe_IoFunction_of_String_Buffer_case01_Bad_01.cmd = private unnamed_addr constant [20 x i8] c"/usr/bin/cat\00\00\00\00\00\00\00\00", align 16 { Glob  }
StoreStmt: [Var101 <-- Var9]	
 i8 47 { constant data }
GepStmt: [Var102 <-- Var4]	
 @__const.Unsafe_IoFunction_of_String_Buffer_case01_Bad_01.cmd = private unnamed_addr constant [20 x i8] c"/usr/bin/cat\00\00\00\00\00\00\00\00", align 16 { Glob  }
StoreStmt: [Var102 <-- Var11]	
 i8 117 { constant data }
GepStmt: [Var103 <-- Var4]	
 @__const.Unsafe_IoFunction_of_String_Buffer_case01_Bad_01.cmd = private unnamed_addr constant [20 x i8] c"/usr/bin/cat\00\00\00\00\00\00\00\00", align 16 { Glob  }
StoreStmt: [Var103 <-- Var13]	
 i8 115 { constant data }
GepStmt: [Var104 <-- Var4]	
 @__const.Unsafe_IoFunction_of_String_Buffer_case01_Bad_01.cmd = private unnamed_addr constant [20 x i8] c"/usr/bin/cat\00\00\00\00\00\00\00\00", align 16 { Glob  }
StoreStmt: [Var104 <-- Var15]	
 i8 114 { constant data }
GepStmt: [Var105 <-- Var4]	
 @__const.Unsafe_IoFunction_of_String_Buffer_case01_Bad_01.cmd = private unnamed_addr constant [20 x i8] c"/usr/bin/cat\00\00\00\00\00\00\00\00", align 16 { Glob  }
StoreStmt: [Var105 <-- Var9]	
 i8 47 { constant data }
GepStmt: [Var106 <-- Var4]	
 @__const.Unsafe_IoFunction_of_String_Buffer_case01_Bad_01.cmd = private unnamed_addr constant [20 x i8] c"/usr/bin/cat\00\00\00\00\00\00\00\00", align 16 { Glob  }
StoreStmt: [Var106 <-- Var17]	
 i8 98 { constant data }
GepStmt: [Var107 <-- Var4]	
 @__const.Unsafe_IoFunction_of_String_Buffer_case01_Bad_01.cmd = private unnamed_addr constant [20 x i8] c"/usr/bin/cat\00\00\00\00\00\00\00\00", align 16 { Glob  }
StoreStmt: [Var107 <-- Var19]	
 i8 105 { constant data }
GepStmt: [Var108 <-- Var4]	
 @__const.Unsafe_IoFunction_of_String_Buffer_case01_Bad_01.cmd = private unnamed_addr constant [20 x i8] c"/usr/bin/cat\00\00\00\00\00\00\00\00", align 16 { Glob  }
StoreStmt: [Var108 <-- Var21]	
 i8 110 { constant data }
GepStmt: [Var109 <-- Var4]	
 @__const.Unsafe_IoFunction_of_String_Buffer_case01_Bad_01.cmd = private unnamed_addr constant [20 x i8] c"/usr/bin/cat\00\00\00\00\00\00\00\00", align 16 { Glob  }
StoreStmt: [Var109 <-- Var9]	
 i8 47 { constant data }
GepStmt: [Var110 <-- Var4]	
 @__const.Unsafe_IoFunction_of_String_Buffer_case01_Bad_01.cmd = private unnamed_addr constant [20 x i8] c"/usr/bin/cat\00\00\00\00\00\00\00\00", align 16 { Glob  }
StoreStmt: [Var110 <-- Var23]	
 i8 99 { constant data }
GepStmt: [Var111 <-- Var4]	
 @__const.Unsafe_IoFunction_of_String_Buffer_case01_Bad_01.cmd = private unnamed_addr constant [20 x i8] c"/usr/bin/cat\00\00\00\00\00\00\00\00", align 16 { Glob  }
StoreStmt: [Var111 <-- Var25]	
 i8 97 { constant data }
GepStmt: [Var112 <-- Var4]	
 @__const.Unsafe_IoFunction_of_String_Buffer_case01_Bad_01.cmd = private unnamed_addr constant [20 x i8] c"/usr/bin/cat\00\00\00\00\00\00\00\00", align 16 { Glob  }
StoreStmt: [Var112 <-- Var27]	
 i8 116 { constant data }
GepStmt: [Var113 <-- Var4]	
 @__const.Unsafe_IoFunction_of_String_Buffer_case01_Bad_01.cmd = private unnamed_addr constant [20 x i8] c"/usr/bin/cat\00\00\00\00\00\00\00\00", align 16 { Glob  }
StoreStmt: [Var113 <-- Var29]	
 i8 0 { constant data }
GepStmt: [Var114 <-- Var4]	
 @__const.Unsafe_IoFunction_of_String_Buffer_case01_Bad_01.cmd = private unnamed_addr constant [20 x i8] c"/usr/bin/cat\00\00\00\00\00\00\00\00", align 16 { Glob  }
StoreStmt: [Var114 <-- Var29]	
 i8 0 { constant data }
GepStmt: [Var115 <-- Var4]	
 @__const.Unsafe_IoFunction_of_String_Buffer_case01_Bad_01.cmd = private unnamed_addr constant [20 x i8] c"/usr/bin/cat\00\00\00\00\00\00\00\00", align 16 { Glob  }
StoreStmt: [Var115 <-- Var29]	
 i8 0 { constant data }
GepStmt: [Var116 <-- Var4]	
 @__const.Unsafe_IoFunction_of_String_Buffer_case01_Bad_01.cmd = private unnamed_addr constant [20 x i8] c"/usr/bin/cat\00\00\00\00\00\00\00\00", align 16 { Glob  }
StoreStmt: [Var116 <-- Var29]	
 i8 0 { constant data }
GepStmt: [Var117 <-- Var4]	
 @__const.Unsafe_IoFunction_of_String_Buffer_case01_Bad_01.cmd = private unnamed_addr constant [20 x i8] c"/usr/bin/cat\00\00\00\00\00\00\00\00", align 16 { Glob  }
StoreStmt: [Var117 <-- Var29]	
 i8 0 { constant data }
GepStmt: [Var118 <-- Var4]	
 @__const.Unsafe_IoFunction_of_String_Buffer_case01_Bad_01.cmd = private unnamed_addr constant [20 x i8] c"/usr/bin/cat\00\00\00\00\00\00\00\00", align 16 { Glob  }
StoreStmt: [Var118 <-- Var29]	
 i8 0 { constant data }
GepStmt: [Var119 <-- Var4]	
 @__const.Unsafe_IoFunction_of_String_Buffer_case01_Bad_01.cmd = private unnamed_addr constant [20 x i8] c"/usr/bin/cat\00\00\00\00\00\00\00\00", align 16 { Glob  }
StoreStmt: [Var119 <-- Var29]	
 i8 0 { constant data }
GepStmt: [Var120 <-- Var4]	
 @__const.Unsafe_IoFunction_of_String_Buffer_case01_Bad_01.cmd = private unnamed_addr constant [20 x i8] c"/usr/bin/cat\00\00\00\00\00\00\00\00", align 16 { Glob  }
StoreStmt: [Var120 <-- Var29]	
 i8 0 { constant data }
GepStmt: [Var121 <-- Var31]	
 @__const.main.userinput = private unnamed_addr constant [10 x i8] c"hello\00\00\00\00\00", align 1 { Glob  }
StoreStmt: [Var121 <-- Var34]	
 i8 104 { constant data }
GepStmt: [Var122 <-- Var31]	
 @__const.main.userinput = private unnamed_addr constant [10 x i8] c"hello\00\00\00\00\00", align 1 { Glob  }
StoreStmt: [Var122 <-- Var36]	
 i8 101 { constant data }
GepStmt: [Var123 <-- Var31]	
 @__const.main.userinput = private unnamed_addr constant [10 x i8] c"hello\00\00\00\00\00", align 1 { Glob  }
StoreStmt: [Var123 <-- Var38]	
 i8 108 { constant data }
GepStmt: [Var124 <-- Var31]	
 @__const.main.userinput = private unnamed_addr constant [10 x i8] c"hello\00\00\00\00\00", align 1 { Glob  }
StoreStmt: [Var124 <-- Var38]	
 i8 108 { constant data }
GepStmt: [Var125 <-- Var31]	
 @__const.main.userinput = private unnamed_addr constant [10 x i8] c"hello\00\00\00\00\00", align 1 { Glob  }
StoreStmt: [Var125 <-- Var40]	
 i8 111 { constant data }
GepStmt: [Var126 <-- Var31]	
 @__const.main.userinput = private unnamed_addr constant [10 x i8] c"hello\00\00\00\00\00", align 1 { Glob  }
StoreStmt: [Var126 <-- Var29]	
 i8 0 { constant data }
GepStmt: [Var127 <-- Var31]	
 @__const.main.userinput = private unnamed_addr constant [10 x i8] c"hello\00\00\00\00\00", align 1 { Glob  }
StoreStmt: [Var127 <-- Var29]	
 i8 0 { constant data }
GepStmt: [Var128 <-- Var31]	
 @__const.main.userinput = private unnamed_addr constant [10 x i8] c"hello\00\00\00\00\00", align 1 { Glob  }
StoreStmt: [Var128 <-- Var29]	
 i8 0 { constant data }
GepStmt: [Var129 <-- Var31]	
 @__const.main.userinput = private unnamed_addr constant [10 x i8] c"hello\00\00\00\00\00", align 1 { Glob  }
StoreStmt: [Var129 <-- Var29]	
 i8 0 { constant data }
GepStmt: [Var130 <-- Var31]	
 @__const.main.userinput = private unnamed_addr constant [10 x i8] c"hello\00\00\00\00\00", align 1 { Glob  }
StoreStmt: [Var130 <-- Var29]	
 i8 0 { constant data }
AddrStmt: [Var42 <-- Var43]	
Function: Unsafe_IoFunction_of_String_Buffer_case01_Bad_01 { "ln": 8, "file": "function/Unsafe_IoFunction_of_String_Buffer_BadCase01-1.c" }
AddrStmt: [Var72 <-- Var73]	
Function: llvm.dbg.declare 
AddrStmt: [Var62 <-- Var63]	
Function: llvm.memcpy.p0i8.p0i8.i64 
AddrStmt: [Var69 <-- Var70]	
Function: __strcat_chk 
AddrStmt: [Var87 <-- Var88]	
Function: main { "ln": 15, "file": "function/Unsafe_IoFunction_of_String_Buffer_BadCase01-1.c" }
-----------Var and Value-----------
Var7	 Value: [0, 0]
Var8	 Value: [0, 0]
Var9	 Value: [47, 47]
Var10	 Value: [47, 47]
Var11	 Value: [117, 117]
Var12	 Value: [117, 117]
Var13	 Value: [115, 115]
Var14	 Value: [115, 115]
Var15	 Value: [114, 114]
Var16	 Value: [114, 114]
Var17	 Value: [98, 98]
Var18	 Value: [98, 98]
Var19	 Value: [105, 105]
Var20	 Value: [105, 105]
Var21	 Value: [110, 110]
Var22	 Value: [110, 110]
Var23	 Value: [99, 99]
Var24	 Value: [99, 99]
Var25	 Value: [97, 97]
Var26	 Value: [97, 97]
Var27	 Value: [116, 116]
Var28	 Value: [116, 116]
Var29	 Value: [0, 0]
Var30	 Value: [0, 0]
Var34	 Value: [104, 104]
Var35	 Value: [104, 104]
Var36	 Value: [101, 101]
Var37	 Value: [101, 101]
Var38	 Value: [108, 108]
Var39	 Value: [108, 108]
Var40	 Value: [111, 111]
Var41	 Value: [111, 111]
Var48	 Value: [1, 1]
Var49	 Value: [1, 1]
Var58	 Value: [20, 20]
Var59	 Value: [20, 20]
Var60	 Value: [0, 0]
Var61	 Value: [0, 0]
Var65	 Value: [0, 0]
Var66	 Value: [0, 0]
Var96	 Value: [10, 10]
Var97	 Value: [10, 10]
Var290	 Value: [47, 47]
Var291	 Value: [117, 117]
Var292	 Value: [115, 115]
Var293	 Value: [114, 114]
Var294	 Value: [47, 47]
Var295	 Value: [98, 98]
Var296	 Value: [105, 105]
Var297	 Value: [110, 110]
Var298	 Value: [47, 47]
Var299	 Value: [99, 99]
Var300	 Value: [97, 97]
Var301	 Value: [116, 116]
Var302	 Value: [0, 0]
Var303	 Value: [0, 0]
Var304	 Value: [0, 0]
Var305	 Value: [0, 0]
Var306	 Value: [0, 0]
Var307	 Value: [0, 0]
Var308	 Value: [0, 0]
Var309	 Value: [0, 0]
Var310	 Value: [104, 104]
Var311	 Value: [101, 101]
Var312	 Value: [108, 108]
Var313	 Value: [108, 108]
Var314	 Value: [111, 111]
Var315	 Value: [0, 0]
Var316	 Value: [0, 0]
Var317	 Value: [0, 0]
Var318	 Value: [0, 0]
Var319	 Value: [0, 0]
Var0	 Value: [ 0x7f000000(0) ,]
Var4	 Value: [ 0x7f000006(6) ,]
Var6	 Value: [ 0x7f000006(6) ,]
Var31	 Value: [ 0x7f000021(33) ,]
Var33	 Value: [ 0x7f000021(33) ,]
Var42	 Value: [ 0x7f00002b(43) ,]
Var43	 Value: [ 0x7f00002b(43) ,]
Var62	 Value: [ 0x7f00003f(63) ,]
Var63	 Value: [ 0x7f00003f(63) ,]
Var69	 Value: [ 0x7f000046(70) ,]
Var70	 Value: [ 0x7f000046(70) ,]
Var72	 Value: [ 0x7f000049(73) ,]
Var73	 Value: [ 0x7f000049(73) ,]
Var87	 Value: [ 0x7f000058(88) ,]
Var88	 Value: [ 0x7f000058(88) ,]
Var101	 Value: [ 0x7f000122(290) ,]
Var102	 Value: [ 0x7f000123(291) ,]
Var103	 Value: [ 0x7f000124(292) ,]
Var104	 Value: [ 0x7f000125(293) ,]
Var105	 Value: [ 0x7f000126(294) ,]
Var106	 Value: [ 0x7f000127(295) ,]
Var107	 Value: [ 0x7f000128(296) ,]
Var108	 Value: [ 0x7f000129(297) ,]
Var109	 Value: [ 0x7f00012a(298) ,]
Var110	 Value: [ 0x7f00012b(299) ,]
Var111	 Value: [ 0x7f00012c(300) ,]
Var112	 Value: [ 0x7f00012d(301) ,]
Var113	 Value: [ 0x7f00012e(302) ,]
Var114	 Value: [ 0x7f00012f(303) ,]
Var115	 Value: [ 0x7f000130(304) ,]
Var116	 Value: [ 0x7f000131(305) ,]
Var117	 Value: [ 0x7f000132(306) ,]
Var118	 Value: [ 0x7f000133(307) ,]
Var119	 Value: [ 0x7f000134(308) ,]
Var120	 Value: [ 0x7f000135(309) ,]
Var121	 Value: [ 0x7f000136(310) ,]
Var122	 Value: [ 0x7f000137(311) ,]
Var123	 Value: [ 0x7f000138(312) ,]
Var124	 Value: [ 0x7f000139(313) ,]
Var125	 Value: [ 0x7f00013a(314) ,]
Var126	 Value: [ 0x7f00013b(315) ,]
Var127	 Value: [ 0x7f00013c(316) ,]
Var128	 Value: [ 0x7f00013d(317) ,]
Var129	 Value: [ 0x7f00013e(318) ,]
Var130	 Value: [ 0x7f00013f(319) ,]
Var290	 Value: [ 0x7f000122(290) ,]
Var291	 Value: [ 0x7f000123(291) ,]
Var292	 Value: [ 0x7f000124(292) ,]
Var293	 Value: [ 0x7f000125(293) ,]
Var294	 Value: [ 0x7f000126(294) ,]
Var295	 Value: [ 0x7f000127(295) ,]
Var296	 Value: [ 0x7f000128(296) ,]
Var297	 Value: [ 0x7f000129(297) ,]
Var298	 Value: [ 0x7f00012a(298) ,]
Var299	 Value: [ 0x7f00012b(299) ,]
Var300	 Value: [ 0x7f00012c(300) ,]
Var301	 Value: [ 0x7f00012d(301) ,]
Var302	 Value: [ 0x7f00012e(302) ,]
Var303	 Value: [ 0x7f00012f(303) ,]
Var304	 Value: [ 0x7f000130(304) ,]
Var305	 Value: [ 0x7f000131(305) ,]
Var306	 Value: [ 0x7f000132(306) ,]
Var307	 Value: [ 0x7f000133(307) ,]
Var308	 Value: [ 0x7f000134(308) ,]
Var309	 Value: [ 0x7f000135(309) ,]
Var310	 Value: [ 0x7f000136(310) ,]
Var311	 Value: [ 0x7f000137(311) ,]
Var312	 Value: [ 0x7f000138(312) ,]
Var313	 Value: [ 0x7f000139(313) ,]
Var314	 Value: [ 0x7f00013a(314) ,]
Var315	 Value: [ 0x7f00013b(315) ,]
Var316	 Value: [ 0x7f00013c(316) ,]
Var317	 Value: [ 0x7f00013d(317) ,]
Var318	 Value: [ 0x7f00013e(318) ,]
Var319	 Value: [ 0x7f00013f(319) ,]
-----------------------------------------
IntraICFGNode16 {fun: main{ "ln": 16, "fl": "function/Unsafe_IoFunction_of_String_Buffer_BadCase01-1.c" }}
AddrStmt: [Var90 <-- Var91]	
   %userinput = alloca [10 x i8], align 1 { "ln": 16, "fl": "function/Unsafe_IoFunction_of_String_Buffer_BadCase01-1.c" }
-----------Var and Value-----------
Var1	 Value: [-INF, +INF]
Var0	 Value: [ 0x7f000000(0) ,]
-----------------------------------------
IntraICFGNode31 {fun: main{ "ln": 16, "cl": 10, "fl": "function/Unsafe_IoFunction_of_String_Buffer_BadCase01-1.c" }}
   call void @llvm.dbg.declare(metadata [10 x i8]* %userinput, metadata !29, metadata !DIExpression()), !dbg !33 { "ln": 16, "cl": 10, "fl": "function/Unsafe_IoFunction_of_String_Buffer_BadCase01-1.c" }
-----------Var and Value-----------
Var1	 Value: [-INF, +INF]
Var0	 Value: [ 0x7f000000(0) ,]
-----------------------------------------
IntraICFGNode17 {fun: main{ "ln": 16, "cl": 10, "fl": "function/Unsafe_IoFunction_of_String_Buffer_BadCase01-1.c" }}
CopyStmt: [Var93 <-- Var90]	
   %0 = bitcast [10 x i8]* %userinput to i8*, !dbg !20 { "ln": 16, "cl": 10, "fl": "function/Unsafe_IoFunction_of_String_Buffer_BadCase01-1.c" }
arr type size: 10
arr type size: 10
-----------Var and Value-----------
Var1	 Value: [-INF, +INF]
Var0	 Value: [ 0x7f000000(0) ,]
-----------------------------------------
IntraICFGNode18 {fun: main}
GepStmt: [Var94 <-- Var31]	
   %1 = getelementptr inbounds [10 x i8], [10 x i8]* @__const.main.userinput, i32 0, i32 0 
[10 x i8]*, byteOffset:[0, 0]
Buffer Overflow Check Safe
-----------Var and Value-----------
Var1	 Value: [-INF, +INF]
Var0	 Value: [ 0x7f000000(0) ,]
-----------------------------------------
CallICFGNode19 {fun: main{ "ln": 16, "cl": 10, "fl": "function/Unsafe_IoFunction_of_String_Buffer_BadCase01-1.c" }}
GepStmt: [Var230 <-- Var93]	
   call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %0, i8* align 1 %1, i64 10, i1 false), !dbg !20 { "ln": 16, "cl": 10, "fl": "function/Unsafe_IoFunction_of_String_Buffer_BadCase01-1.c" }
GepStmt: [Var231 <-- Var31]	
   call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %0, i8* align 1 %1, i64 10, i1 false), !dbg !20 { "ln": 16, "cl": 10, "fl": "function/Unsafe_IoFunction_of_String_Buffer_BadCase01-1.c" }
LoadStmt: [Var232 <-- Var231]	
   call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %0, i8* align 1 %1, i64 10, i1 false), !dbg !20 { "ln": 16, "cl": 10, "fl": "function/Unsafe_IoFunction_of_String_Buffer_BadCase01-1.c" }
StoreStmt: [Var230 <-- Var232]	
   call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %0, i8* align 1 %1, i64 10, i1 false), !dbg !20 { "ln": 16, "cl": 10, "fl": "function/Unsafe_IoFunction_of_String_Buffer_BadCase01-1.c" }
GepStmt: [Var233 <-- Var93]	
   call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %0, i8* align 1 %1, i64 10, i1 false), !dbg !20 { "ln": 16, "cl": 10, "fl": "function/Unsafe_IoFunction_of_String_Buffer_BadCase01-1.c" }
GepStmt: [Var234 <-- Var31]	
   call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %0, i8* align 1 %1, i64 10, i1 false), !dbg !20 { "ln": 16, "cl": 10, "fl": "function/Unsafe_IoFunction_of_String_Buffer_BadCase01-1.c" }
LoadStmt: [Var235 <-- Var234]	
   call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %0, i8* align 1 %1, i64 10, i1 false), !dbg !20 { "ln": 16, "cl": 10, "fl": "function/Unsafe_IoFunction_of_String_Buffer_BadCase01-1.c" }
StoreStmt: [Var233 <-- Var235]	
   call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %0, i8* align 1 %1, i64 10, i1 false), !dbg !20 { "ln": 16, "cl": 10, "fl": "function/Unsafe_IoFunction_of_String_Buffer_BadCase01-1.c" }
GepStmt: [Var236 <-- Var93]	
   call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %0, i8* align 1 %1, i64 10, i1 false), !dbg !20 { "ln": 16, "cl": 10, "fl": "function/Unsafe_IoFunction_of_String_Buffer_BadCase01-1.c" }
GepStmt: [Var237 <-- Var31]	
   call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %0, i8* align 1 %1, i64 10, i1 false), !dbg !20 { "ln": 16, "cl": 10, "fl": "function/Unsafe_IoFunction_of_String_Buffer_BadCase01-1.c" }
LoadStmt: [Var238 <-- Var237]	
   call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %0, i8* align 1 %1, i64 10, i1 false), !dbg !20 { "ln": 16, "cl": 10, "fl": "function/Unsafe_IoFunction_of_String_Buffer_BadCase01-1.c" }
StoreStmt: [Var236 <-- Var238]	
   call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %0, i8* align 1 %1, i64 10, i1 false), !dbg !20 { "ln": 16, "cl": 10, "fl": "function/Unsafe_IoFunction_of_String_Buffer_BadCase01-1.c" }
GepStmt: [Var239 <-- Var93]	
   call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %0, i8* align 1 %1, i64 10, i1 false), !dbg !20 { "ln": 16, "cl": 10, "fl": "function/Unsafe_IoFunction_of_String_Buffer_BadCase01-1.c" }
GepStmt: [Var240 <-- Var31]	
   call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %0, i8* align 1 %1, i64 10, i1 false), !dbg !20 { "ln": 16, "cl": 10, "fl": "function/Unsafe_IoFunction_of_String_Buffer_BadCase01-1.c" }
LoadStmt: [Var241 <-- Var240]	
   call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %0, i8* align 1 %1, i64 10, i1 false), !dbg !20 { "ln": 16, "cl": 10, "fl": "function/Unsafe_IoFunction_of_String_Buffer_BadCase01-1.c" }
StoreStmt: [Var239 <-- Var241]	
   call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %0, i8* align 1 %1, i64 10, i1 false), !dbg !20 { "ln": 16, "cl": 10, "fl": "function/Unsafe_IoFunction_of_String_Buffer_BadCase01-1.c" }
GepStmt: [Var242 <-- Var93]	
   call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %0, i8* align 1 %1, i64 10, i1 false), !dbg !20 { "ln": 16, "cl": 10, "fl": "function/Unsafe_IoFunction_of_String_Buffer_BadCase01-1.c" }
GepStmt: [Var243 <-- Var31]	
   call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %0, i8* align 1 %1, i64 10, i1 false), !dbg !20 { "ln": 16, "cl": 10, "fl": "function/Unsafe_IoFunction_of_String_Buffer_BadCase01-1.c" }
LoadStmt: [Var244 <-- Var243]	
   call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %0, i8* align 1 %1, i64 10, i1 false), !dbg !20 { "ln": 16, "cl": 10, "fl": "function/Unsafe_IoFunction_of_String_Buffer_BadCase01-1.c" }
StoreStmt: [Var242 <-- Var244]	
   call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %0, i8* align 1 %1, i64 10, i1 false), !dbg !20 { "ln": 16, "cl": 10, "fl": "function/Unsafe_IoFunction_of_String_Buffer_BadCase01-1.c" }
GepStmt: [Var245 <-- Var93]	
   call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %0, i8* align 1 %1, i64 10, i1 false), !dbg !20 { "ln": 16, "cl": 10, "fl": "function/Unsafe_IoFunction_of_String_Buffer_BadCase01-1.c" }
GepStmt: [Var246 <-- Var31]	
   call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %0, i8* align 1 %1, i64 10, i1 false), !dbg !20 { "ln": 16, "cl": 10, "fl": "function/Unsafe_IoFunction_of_String_Buffer_BadCase01-1.c" }
LoadStmt: [Var247 <-- Var246]	
   call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %0, i8* align 1 %1, i64 10, i1 false), !dbg !20 { "ln": 16, "cl": 10, "fl": "function/Unsafe_IoFunction_of_String_Buffer_BadCase01-1.c" }
StoreStmt: [Var245 <-- Var247]	
   call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %0, i8* align 1 %1, i64 10, i1 false), !dbg !20 { "ln": 16, "cl": 10, "fl": "function/Unsafe_IoFunction_of_String_Buffer_BadCase01-1.c" }
GepStmt: [Var248 <-- Var93]	
   call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %0, i8* align 1 %1, i64 10, i1 false), !dbg !20 { "ln": 16, "cl": 10, "fl": "function/Unsafe_IoFunction_of_String_Buffer_BadCase01-1.c" }
GepStmt: [Var249 <-- Var31]	
   call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %0, i8* align 1 %1, i64 10, i1 false), !dbg !20 { "ln": 16, "cl": 10, "fl": "function/Unsafe_IoFunction_of_String_Buffer_BadCase01-1.c" }
LoadStmt: [Var250 <-- Var249]	
   call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %0, i8* align 1 %1, i64 10, i1 false), !dbg !20 { "ln": 16, "cl": 10, "fl": "function/Unsafe_IoFunction_of_String_Buffer_BadCase01-1.c" }
StoreStmt: [Var248 <-- Var250]	
   call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %0, i8* align 1 %1, i64 10, i1 false), !dbg !20 { "ln": 16, "cl": 10, "fl": "function/Unsafe_IoFunction_of_String_Buffer_BadCase01-1.c" }
GepStmt: [Var251 <-- Var93]	
   call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %0, i8* align 1 %1, i64 10, i1 false), !dbg !20 { "ln": 16, "cl": 10, "fl": "function/Unsafe_IoFunction_of_String_Buffer_BadCase01-1.c" }
GepStmt: [Var252 <-- Var31]	
   call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %0, i8* align 1 %1, i64 10, i1 false), !dbg !20 { "ln": 16, "cl": 10, "fl": "function/Unsafe_IoFunction_of_String_Buffer_BadCase01-1.c" }
LoadStmt: [Var253 <-- Var252]	
   call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %0, i8* align 1 %1, i64 10, i1 false), !dbg !20 { "ln": 16, "cl": 10, "fl": "function/Unsafe_IoFunction_of_String_Buffer_BadCase01-1.c" }
StoreStmt: [Var251 <-- Var253]	
   call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %0, i8* align 1 %1, i64 10, i1 false), !dbg !20 { "ln": 16, "cl": 10, "fl": "function/Unsafe_IoFunction_of_String_Buffer_BadCase01-1.c" }
GepStmt: [Var254 <-- Var93]	
   call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %0, i8* align 1 %1, i64 10, i1 false), !dbg !20 { "ln": 16, "cl": 10, "fl": "function/Unsafe_IoFunction_of_String_Buffer_BadCase01-1.c" }
GepStmt: [Var255 <-- Var31]	
   call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %0, i8* align 1 %1, i64 10, i1 false), !dbg !20 { "ln": 16, "cl": 10, "fl": "function/Unsafe_IoFunction_of_String_Buffer_BadCase01-1.c" }
LoadStmt: [Var256 <-- Var255]	
   call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %0, i8* align 1 %1, i64 10, i1 false), !dbg !20 { "ln": 16, "cl": 10, "fl": "function/Unsafe_IoFunction_of_String_Buffer_BadCase01-1.c" }
StoreStmt: [Var254 <-- Var256]	
   call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %0, i8* align 1 %1, i64 10, i1 false), !dbg !20 { "ln": 16, "cl": 10, "fl": "function/Unsafe_IoFunction_of_String_Buffer_BadCase01-1.c" }
GepStmt: [Var257 <-- Var93]	
   call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %0, i8* align 1 %1, i64 10, i1 false), !dbg !20 { "ln": 16, "cl": 10, "fl": "function/Unsafe_IoFunction_of_String_Buffer_BadCase01-1.c" }
GepStmt: [Var258 <-- Var31]	
   call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %0, i8* align 1 %1, i64 10, i1 false), !dbg !20 { "ln": 16, "cl": 10, "fl": "function/Unsafe_IoFunction_of_String_Buffer_BadCase01-1.c" }
LoadStmt: [Var259 <-- Var258]	
   call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %0, i8* align 1 %1, i64 10, i1 false), !dbg !20 { "ln": 16, "cl": 10, "fl": "function/Unsafe_IoFunction_of_String_Buffer_BadCase01-1.c" }
StoreStmt: [Var257 <-- Var259]	
   call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %0, i8* align 1 %1, i64 10, i1 false), !dbg !20 { "ln": 16, "cl": 10, "fl": "function/Unsafe_IoFunction_of_String_Buffer_BadCase01-1.c" }
CopyStmt: [Var95 <-- Var0]	
   call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %0, i8* align 1 %1, i64 10, i1 false), !dbg !20 { "ln": 16, "cl": 10, "fl": "function/Unsafe_IoFunction_of_String_Buffer_BadCase01-1.c" }
arr type size: 10
arr type size: 10
Buffer Overflow Check Safe
[10 x i8]*, byteOffset:[0, 0]
Buffer Overflow Check Safe
arr type size: 10
arr type size: 10
Buffer Overflow Check Safe
[10 x i8]*, byteOffset:[0, 0]
Buffer Overflow Check Safe
arr type size: 10
arr type size: 10
Buffer Overflow Check Safe
[10 x i8]*, byteOffset:[0, 0]
Buffer Overflow Check Safe
arr type size: 10
arr type size: 10
Buffer Overflow Check Safe
[10 x i8]*, byteOffset:[0, 0]
Buffer Overflow Check Safe
arr type size: 10
arr type size: 10
Buffer Overflow Check Safe
[10 x i8]*, byteOffset:[0, 0]
Buffer Overflow Check Safe
arr type size: 10
arr type size: 10
Buffer Overflow Check Safe
[10 x i8]*, byteOffset:[0, 0]
Buffer Overflow Check Safe
arr type size: 10
arr type size: 10
Buffer Overflow Check Safe
[10 x i8]*, byteOffset:[0, 0]
Buffer Overflow Check Safe
arr type size: 10
arr type size: 10
Buffer Overflow Check Safe
[10 x i8]*, byteOffset:[0, 0]
Buffer Overflow Check Safe
arr type size: 10
arr type size: 10
Buffer Overflow Check Safe
[10 x i8]*, byteOffset:[0, 0]
Buffer Overflow Check Safe
arr type size: 10
arr type size: 10
Buffer Overflow Check Safe
[10 x i8]*, byteOffset:[0, 0]
Buffer Overflow Check Safe
arr type size: 10
arr type size: 10
Buffer Overflow Check Safe
[10 x i8]*, byteOffset:[0, 0]
Buffer Overflow Check Safe
[10 x i8]*, byteOffset:[0, 0]
arr type size: 10
-----------Var and Value-----------
Var1	 Value: [-INF, +INF]
Var260	 Value: [104, 104]
Var261	 Value: [101, 101]
Var262	 Value: [108, 108]
Var263	 Value: [108, 108]
Var264	 Value: [111, 111]
Var265	 Value: [0, 0]
Var266	 Value: [0, 0]
Var267	 Value: [0, 0]
Var268	 Value: [0, 0]
Var269	 Value: [0, 0]
Var0	 Value: [ 0x7f000000(0) ,]
-----------------------------------------
IntraICFGNode21 {fun: main{ "ln": 17, "cl": 54, "fl": "function/Unsafe_IoFunction_of_String_Buffer_BadCase01-1.c" }}
GepStmt: [Var98 <-- Var90]	
   %arraydecay = getelementptr inbounds [10 x i8], [10 x i8]* %userinput, i64 0, i64 0, !dbg !21 { "ln": 17, "cl": 54, "fl": "function/Unsafe_IoFunction_of_String_Buffer_BadCase01-1.c" }
[10 x i8]*, byteOffset:[0, 0]
arr type size: 10
arr type size: 10
Buffer Overflow Check Safe
-----------Var and Value-----------
Var1	 Value: [-INF, +INF]
Var260	 Value: [104, 104]
Var261	 Value: [101, 101]
Var262	 Value: [108, 108]
Var263	 Value: [108, 108]
Var264	 Value: [111, 111]
Var265	 Value: [0, 0]
Var266	 Value: [0, 0]
Var267	 Value: [0, 0]
Var268	 Value: [0, 0]
Var269	 Value: [0, 0]
Var0	 Value: [ 0x7f000000(0) ,]
-----------------------------------------
CallICFGNode22 {fun: main{ "ln": 17, "cl": 5, "fl": "function/Unsafe_IoFunction_of_String_Buffer_BadCase01-1.c" }}
CallPE: [Var45 <-- Var98]	
   call void @Unsafe_IoFunction_of_String_Buffer_case01_Bad_01(i8* noundef %arraydecay), !dbg !22 { "ln": 17, "cl": 5, "fl": "function/Unsafe_IoFunction_of_String_Buffer_BadCase01-1.c" }
IntraICFGNode2 {fun: Unsafe_IoFunction_of_String_Buffer_case01_Bad_01{ "ln": 8, "fl": "function/Unsafe_IoFunction_of_String_Buffer_BadCase01-1.c" }}
AddrStmt: [Var46 <-- Var47]	
   %userinput.addr = alloca i8*, align 8 { "ln": 8, "fl": "function/Unsafe_IoFunction_of_String_Buffer_BadCase01-1.c" }
-----------Var and Value-----------
Var1	 Value: [-INF, +INF]
Var260	 Value: [104, 104]
Var261	 Value: [101, 101]
Var262	 Value: [108, 108]
Var263	 Value: [108, 108]
Var264	 Value: [111, 111]
Var265	 Value: [0, 0]
Var266	 Value: [0, 0]
Var267	 Value: [0, 0]
Var268	 Value: [0, 0]
Var269	 Value: [0, 0]
Var0	 Value: [ 0x7f000000(0) ,]
-----------------------------------------
IntraICFGNode3 {fun: Unsafe_IoFunction_of_String_Buffer_case01_Bad_01{ "ln": 10, "fl": "function/Unsafe_IoFunction_of_String_Buffer_BadCase01-1.c" }}
AddrStmt: [Var50 <-- Var51]	
   %cmd = alloca [20 x i8], align 16 { "ln": 10, "fl": "function/Unsafe_IoFunction_of_String_Buffer_BadCase01-1.c" }
-----------Var and Value-----------
Var1	 Value: [-INF, +INF]
Var260	 Value: [104, 104]
Var261	 Value: [101, 101]
Var262	 Value: [108, 108]
Var263	 Value: [108, 108]
Var264	 Value: [111, 111]
Var265	 Value: [0, 0]
Var266	 Value: [0, 0]
Var267	 Value: [0, 0]
Var268	 Value: [0, 0]
Var269	 Value: [0, 0]
Var0	 Value: [ 0x7f000000(0) ,]
-----------------------------------------
IntraICFGNode4 {fun: Unsafe_IoFunction_of_String_Buffer_case01_Bad_01}
StoreStmt: [Var46 <-- Var45]	
   store i8* %userinput, i8** %userinput.addr, align 8 
-----------Var and Value-----------
Var1	 Value: [-INF, +INF]
Var260	 Value: [104, 104]
Var261	 Value: [101, 101]
Var262	 Value: [108, 108]
Var263	 Value: [108, 108]
Var264	 Value: [111, 111]
Var265	 Value: [0, 0]
Var266	 Value: [0, 0]
Var267	 Value: [0, 0]
Var268	 Value: [0, 0]
Var269	 Value: [0, 0]
Var0	 Value: [ 0x7f000000(0) ,]
Var47	 Value: [ 0x7f000104(260) ,]
-----------------------------------------
IntraICFGNode29 {fun: Unsafe_IoFunction_of_String_Buffer_case01_Bad_01{ "ln": 8, "cl": 61, "fl": "function/Unsafe_IoFunction_of_String_Buffer_BadCase01-1.c" }}
   call void @llvm.dbg.declare(metadata i8** %userinput.addr, metadata !16, metadata !DIExpression()), !dbg !17 { "ln": 8, "cl": 61, "fl": "function/Unsafe_IoFunction_of_String_Buffer_BadCase01-1.c" }
-----------Var and Value-----------
Var1	 Value: [-INF, +INF]
Var260	 Value: [104, 104]
Var261	 Value: [101, 101]
Var262	 Value: [108, 108]
Var263	 Value: [108, 108]
Var264	 Value: [111, 111]
Var265	 Value: [0, 0]
Var266	 Value: [0, 0]
Var267	 Value: [0, 0]
Var268	 Value: [0, 0]
Var269	 Value: [0, 0]
Var0	 Value: [ 0x7f000000(0) ,]
Var47	 Value: [ 0x7f000104(260) ,]
-----------------------------------------
IntraICFGNode30 {fun: Unsafe_IoFunction_of_String_Buffer_case01_Bad_01{ "ln": 10, "cl": 7, "fl": "function/Unsafe_IoFunction_of_String_Buffer_BadCase01-1.c" }}
   call void @llvm.dbg.declare(metadata [20 x i8]* %cmd, metadata !18, metadata !DIExpression()), !dbg !22 { "ln": 10, "cl": 7, "fl": "function/Unsafe_IoFunction_of_String_Buffer_BadCase01-1.c" }
-----------Var and Value-----------
Var1	 Value: [-INF, +INF]
Var260	 Value: [104, 104]
Var261	 Value: [101, 101]
Var262	 Value: [108, 108]
Var263	 Value: [108, 108]
Var264	 Value: [111, 111]
Var265	 Value: [0, 0]
Var266	 Value: [0, 0]
Var267	 Value: [0, 0]
Var268	 Value: [0, 0]
Var269	 Value: [0, 0]
Var0	 Value: [ 0x7f000000(0) ,]
Var47	 Value: [ 0x7f000104(260) ,]
-----------------------------------------
IntraICFGNode5 {fun: Unsafe_IoFunction_of_String_Buffer_case01_Bad_01{ "ln": 10, "cl": 7, "fl": "function/Unsafe_IoFunction_of_String_Buffer_BadCase01-1.c" }}
CopyStmt: [Var55 <-- Var50]	
   %0 = bitcast [20 x i8]* %cmd to i8*, !dbg !22 { "ln": 10, "cl": 7, "fl": "function/Unsafe_IoFunction_of_String_Buffer_BadCase01-1.c" }
arr type size: 14
arr type size: 14
-----------Var and Value-----------
Var1	 Value: [-INF, +INF]
Var260	 Value: [104, 104]
Var261	 Value: [101, 101]
Var262	 Value: [108, 108]
Var263	 Value: [108, 108]
Var264	 Value: [111, 111]
Var265	 Value: [0, 0]
Var266	 Value: [0, 0]
Var267	 Value: [0, 0]
Var268	 Value: [0, 0]
Var269	 Value: [0, 0]
Var0	 Value: [ 0x7f000000(0) ,]
Var47	 Value: [ 0x7f000104(260) ,]
-----------------------------------------
IntraICFGNode6 {fun: Unsafe_IoFunction_of_String_Buffer_case01_Bad_01}
GepStmt: [Var56 <-- Var4]	
   %1 = getelementptr inbounds [20 x i8], [20 x i8]* @__const.Unsafe_IoFunction_of_String_Buffer_case01_Bad_01.cmd, i32 0, i32 0 
[20 x i8]*, byteOffset:[0, 0]
Buffer Overflow Check Safe
-----------Var and Value-----------
Var1	 Value: [-INF, +INF]
Var260	 Value: [104, 104]
Var261	 Value: [101, 101]
Var262	 Value: [108, 108]
Var263	 Value: [108, 108]
Var264	 Value: [111, 111]
Var265	 Value: [0, 0]
Var266	 Value: [0, 0]
Var267	 Value: [0, 0]
Var268	 Value: [0, 0]
Var269	 Value: [0, 0]
Var0	 Value: [ 0x7f000000(0) ,]
Var47	 Value: [ 0x7f000104(260) ,]
-----------------------------------------
CallICFGNode7 {fun: Unsafe_IoFunction_of_String_Buffer_case01_Bad_01{ "ln": 10, "cl": 7, "fl": "function/Unsafe_IoFunction_of_String_Buffer_BadCase01-1.c" }}
GepStmt: [Var167 <-- Var55]	
   call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %0, i8* align 16 %1, i64 20, i1 false), !dbg !22 { "ln": 10, "cl": 7, "fl": "function/Unsafe_IoFunction_of_String_Buffer_BadCase01-1.c" }
GepStmt: [Var168 <-- Var4]	
   call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %0, i8* align 16 %1, i64 20, i1 false), !dbg !22 { "ln": 10, "cl": 7, "fl": "function/Unsafe_IoFunction_of_String_Buffer_BadCase01-1.c" }
LoadStmt: [Var169 <-- Var168]	
   call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %0, i8* align 16 %1, i64 20, i1 false), !dbg !22 { "ln": 10, "cl": 7, "fl": "function/Unsafe_IoFunction_of_String_Buffer_BadCase01-1.c" }
StoreStmt: [Var167 <-- Var169]	
   call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %0, i8* align 16 %1, i64 20, i1 false), !dbg !22 { "ln": 10, "cl": 7, "fl": "function/Unsafe_IoFunction_of_String_Buffer_BadCase01-1.c" }
GepStmt: [Var170 <-- Var55]	
   call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %0, i8* align 16 %1, i64 20, i1 false), !dbg !22 { "ln": 10, "cl": 7, "fl": "function/Unsafe_IoFunction_of_String_Buffer_BadCase01-1.c" }
GepStmt: [Var171 <-- Var4]	
   call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %0, i8* align 16 %1, i64 20, i1 false), !dbg !22 { "ln": 10, "cl": 7, "fl": "function/Unsafe_IoFunction_of_String_Buffer_BadCase01-1.c" }
LoadStmt: [Var172 <-- Var171]	
   call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %0, i8* align 16 %1, i64 20, i1 false), !dbg !22 { "ln": 10, "cl": 7, "fl": "function/Unsafe_IoFunction_of_String_Buffer_BadCase01-1.c" }
StoreStmt: [Var170 <-- Var172]	
   call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %0, i8* align 16 %1, i64 20, i1 false), !dbg !22 { "ln": 10, "cl": 7, "fl": "function/Unsafe_IoFunction_of_String_Buffer_BadCase01-1.c" }
GepStmt: [Var173 <-- Var55]	
   call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %0, i8* align 16 %1, i64 20, i1 false), !dbg !22 { "ln": 10, "cl": 7, "fl": "function/Unsafe_IoFunction_of_String_Buffer_BadCase01-1.c" }
GepStmt: [Var174 <-- Var4]	
   call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %0, i8* align 16 %1, i64 20, i1 false), !dbg !22 { "ln": 10, "cl": 7, "fl": "function/Unsafe_IoFunction_of_String_Buffer_BadCase01-1.c" }
LoadStmt: [Var175 <-- Var174]	
   call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %0, i8* align 16 %1, i64 20, i1 false), !dbg !22 { "ln": 10, "cl": 7, "fl": "function/Unsafe_IoFunction_of_String_Buffer_BadCase01-1.c" }
StoreStmt: [Var173 <-- Var175]	
   call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %0, i8* align 16 %1, i64 20, i1 false), !dbg !22 { "ln": 10, "cl": 7, "fl": "function/Unsafe_IoFunction_of_String_Buffer_BadCase01-1.c" }
GepStmt: [Var176 <-- Var55]	
   call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %0, i8* align 16 %1, i64 20, i1 false), !dbg !22 { "ln": 10, "cl": 7, "fl": "function/Unsafe_IoFunction_of_String_Buffer_BadCase01-1.c" }
GepStmt: [Var177 <-- Var4]	
   call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %0, i8* align 16 %1, i64 20, i1 false), !dbg !22 { "ln": 10, "cl": 7, "fl": "function/Unsafe_IoFunction_of_String_Buffer_BadCase01-1.c" }
LoadStmt: [Var178 <-- Var177]	
   call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %0, i8* align 16 %1, i64 20, i1 false), !dbg !22 { "ln": 10, "cl": 7, "fl": "function/Unsafe_IoFunction_of_String_Buffer_BadCase01-1.c" }
StoreStmt: [Var176 <-- Var178]	
   call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %0, i8* align 16 %1, i64 20, i1 false), !dbg !22 { "ln": 10, "cl": 7, "fl": "function/Unsafe_IoFunction_of_String_Buffer_BadCase01-1.c" }
GepStmt: [Var179 <-- Var55]	
   call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %0, i8* align 16 %1, i64 20, i1 false), !dbg !22 { "ln": 10, "cl": 7, "fl": "function/Unsafe_IoFunction_of_String_Buffer_BadCase01-1.c" }
GepStmt: [Var180 <-- Var4]	
   call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %0, i8* align 16 %1, i64 20, i1 false), !dbg !22 { "ln": 10, "cl": 7, "fl": "function/Unsafe_IoFunction_of_String_Buffer_BadCase01-1.c" }
LoadStmt: [Var181 <-- Var180]	
   call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %0, i8* align 16 %1, i64 20, i1 false), !dbg !22 { "ln": 10, "cl": 7, "fl": "function/Unsafe_IoFunction_of_String_Buffer_BadCase01-1.c" }
StoreStmt: [Var179 <-- Var181]	
   call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %0, i8* align 16 %1, i64 20, i1 false), !dbg !22 { "ln": 10, "cl": 7, "fl": "function/Unsafe_IoFunction_of_String_Buffer_BadCase01-1.c" }
GepStmt: [Var182 <-- Var55]	
   call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %0, i8* align 16 %1, i64 20, i1 false), !dbg !22 { "ln": 10, "cl": 7, "fl": "function/Unsafe_IoFunction_of_String_Buffer_BadCase01-1.c" }
GepStmt: [Var183 <-- Var4]	
   call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %0, i8* align 16 %1, i64 20, i1 false), !dbg !22 { "ln": 10, "cl": 7, "fl": "function/Unsafe_IoFunction_of_String_Buffer_BadCase01-1.c" }
LoadStmt: [Var184 <-- Var183]	
   call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %0, i8* align 16 %1, i64 20, i1 false), !dbg !22 { "ln": 10, "cl": 7, "fl": "function/Unsafe_IoFunction_of_String_Buffer_BadCase01-1.c" }
StoreStmt: [Var182 <-- Var184]	
   call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %0, i8* align 16 %1, i64 20, i1 false), !dbg !22 { "ln": 10, "cl": 7, "fl": "function/Unsafe_IoFunction_of_String_Buffer_BadCase01-1.c" }
GepStmt: [Var185 <-- Var55]	
   call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %0, i8* align 16 %1, i64 20, i1 false), !dbg !22 { "ln": 10, "cl": 7, "fl": "function/Unsafe_IoFunction_of_String_Buffer_BadCase01-1.c" }
GepStmt: [Var186 <-- Var4]	
   call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %0, i8* align 16 %1, i64 20, i1 false), !dbg !22 { "ln": 10, "cl": 7, "fl": "function/Unsafe_IoFunction_of_String_Buffer_BadCase01-1.c" }
LoadStmt: [Var187 <-- Var186]	
   call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %0, i8* align 16 %1, i64 20, i1 false), !dbg !22 { "ln": 10, "cl": 7, "fl": "function/Unsafe_IoFunction_of_String_Buffer_BadCase01-1.c" }
StoreStmt: [Var185 <-- Var187]	
   call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %0, i8* align 16 %1, i64 20, i1 false), !dbg !22 { "ln": 10, "cl": 7, "fl": "function/Unsafe_IoFunction_of_String_Buffer_BadCase01-1.c" }
GepStmt: [Var188 <-- Var55]	
   call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %0, i8* align 16 %1, i64 20, i1 false), !dbg !22 { "ln": 10, "cl": 7, "fl": "function/Unsafe_IoFunction_of_String_Buffer_BadCase01-1.c" }
GepStmt: [Var189 <-- Var4]	
   call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %0, i8* align 16 %1, i64 20, i1 false), !dbg !22 { "ln": 10, "cl": 7, "fl": "function/Unsafe_IoFunction_of_String_Buffer_BadCase01-1.c" }
LoadStmt: [Var190 <-- Var189]	
   call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %0, i8* align 16 %1, i64 20, i1 false), !dbg !22 { "ln": 10, "cl": 7, "fl": "function/Unsafe_IoFunction_of_String_Buffer_BadCase01-1.c" }
StoreStmt: [Var188 <-- Var190]	
   call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %0, i8* align 16 %1, i64 20, i1 false), !dbg !22 { "ln": 10, "cl": 7, "fl": "function/Unsafe_IoFunction_of_String_Buffer_BadCase01-1.c" }
GepStmt: [Var191 <-- Var55]	
   call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %0, i8* align 16 %1, i64 20, i1 false), !dbg !22 { "ln": 10, "cl": 7, "fl": "function/Unsafe_IoFunction_of_String_Buffer_BadCase01-1.c" }
GepStmt: [Var192 <-- Var4]	
   call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %0, i8* align 16 %1, i64 20, i1 false), !dbg !22 { "ln": 10, "cl": 7, "fl": "function/Unsafe_IoFunction_of_String_Buffer_BadCase01-1.c" }
LoadStmt: [Var193 <-- Var192]	
   call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %0, i8* align 16 %1, i64 20, i1 false), !dbg !22 { "ln": 10, "cl": 7, "fl": "function/Unsafe_IoFunction_of_String_Buffer_BadCase01-1.c" }
StoreStmt: [Var191 <-- Var193]	
   call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %0, i8* align 16 %1, i64 20, i1 false), !dbg !22 { "ln": 10, "cl": 7, "fl": "function/Unsafe_IoFunction_of_String_Buffer_BadCase01-1.c" }
GepStmt: [Var194 <-- Var55]	
   call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %0, i8* align 16 %1, i64 20, i1 false), !dbg !22 { "ln": 10, "cl": 7, "fl": "function/Unsafe_IoFunction_of_String_Buffer_BadCase01-1.c" }
GepStmt: [Var195 <-- Var4]	
   call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %0, i8* align 16 %1, i64 20, i1 false), !dbg !22 { "ln": 10, "cl": 7, "fl": "function/Unsafe_IoFunction_of_String_Buffer_BadCase01-1.c" }
LoadStmt: [Var196 <-- Var195]	
   call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %0, i8* align 16 %1, i64 20, i1 false), !dbg !22 { "ln": 10, "cl": 7, "fl": "function/Unsafe_IoFunction_of_String_Buffer_BadCase01-1.c" }
StoreStmt: [Var194 <-- Var196]	
   call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %0, i8* align 16 %1, i64 20, i1 false), !dbg !22 { "ln": 10, "cl": 7, "fl": "function/Unsafe_IoFunction_of_String_Buffer_BadCase01-1.c" }
GepStmt: [Var197 <-- Var55]	
   call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %0, i8* align 16 %1, i64 20, i1 false), !dbg !22 { "ln": 10, "cl": 7, "fl": "function/Unsafe_IoFunction_of_String_Buffer_BadCase01-1.c" }
GepStmt: [Var198 <-- Var4]	
   call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %0, i8* align 16 %1, i64 20, i1 false), !dbg !22 { "ln": 10, "cl": 7, "fl": "function/Unsafe_IoFunction_of_String_Buffer_BadCase01-1.c" }
LoadStmt: [Var199 <-- Var198]	
   call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %0, i8* align 16 %1, i64 20, i1 false), !dbg !22 { "ln": 10, "cl": 7, "fl": "function/Unsafe_IoFunction_of_String_Buffer_BadCase01-1.c" }
StoreStmt: [Var197 <-- Var199]	
   call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %0, i8* align 16 %1, i64 20, i1 false), !dbg !22 { "ln": 10, "cl": 7, "fl": "function/Unsafe_IoFunction_of_String_Buffer_BadCase01-1.c" }
GepStmt: [Var200 <-- Var55]	
   call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %0, i8* align 16 %1, i64 20, i1 false), !dbg !22 { "ln": 10, "cl": 7, "fl": "function/Unsafe_IoFunction_of_String_Buffer_BadCase01-1.c" }
GepStmt: [Var201 <-- Var4]	
   call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %0, i8* align 16 %1, i64 20, i1 false), !dbg !22 { "ln": 10, "cl": 7, "fl": "function/Unsafe_IoFunction_of_String_Buffer_BadCase01-1.c" }
LoadStmt: [Var202 <-- Var201]	
   call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %0, i8* align 16 %1, i64 20, i1 false), !dbg !22 { "ln": 10, "cl": 7, "fl": "function/Unsafe_IoFunction_of_String_Buffer_BadCase01-1.c" }
StoreStmt: [Var200 <-- Var202]	
   call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %0, i8* align 16 %1, i64 20, i1 false), !dbg !22 { "ln": 10, "cl": 7, "fl": "function/Unsafe_IoFunction_of_String_Buffer_BadCase01-1.c" }
GepStmt: [Var203 <-- Var55]	
   call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %0, i8* align 16 %1, i64 20, i1 false), !dbg !22 { "ln": 10, "cl": 7, "fl": "function/Unsafe_IoFunction_of_String_Buffer_BadCase01-1.c" }
GepStmt: [Var204 <-- Var4]	
   call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %0, i8* align 16 %1, i64 20, i1 false), !dbg !22 { "ln": 10, "cl": 7, "fl": "function/Unsafe_IoFunction_of_String_Buffer_BadCase01-1.c" }
LoadStmt: [Var205 <-- Var204]	
   call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %0, i8* align 16 %1, i64 20, i1 false), !dbg !22 { "ln": 10, "cl": 7, "fl": "function/Unsafe_IoFunction_of_String_Buffer_BadCase01-1.c" }
StoreStmt: [Var203 <-- Var205]	
   call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %0, i8* align 16 %1, i64 20, i1 false), !dbg !22 { "ln": 10, "cl": 7, "fl": "function/Unsafe_IoFunction_of_String_Buffer_BadCase01-1.c" }
GepStmt: [Var206 <-- Var55]	
   call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %0, i8* align 16 %1, i64 20, i1 false), !dbg !22 { "ln": 10, "cl": 7, "fl": "function/Unsafe_IoFunction_of_String_Buffer_BadCase01-1.c" }
GepStmt: [Var207 <-- Var4]	
   call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %0, i8* align 16 %1, i64 20, i1 false), !dbg !22 { "ln": 10, "cl": 7, "fl": "function/Unsafe_IoFunction_of_String_Buffer_BadCase01-1.c" }
LoadStmt: [Var208 <-- Var207]	
   call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %0, i8* align 16 %1, i64 20, i1 false), !dbg !22 { "ln": 10, "cl": 7, "fl": "function/Unsafe_IoFunction_of_String_Buffer_BadCase01-1.c" }
StoreStmt: [Var206 <-- Var208]	
   call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %0, i8* align 16 %1, i64 20, i1 false), !dbg !22 { "ln": 10, "cl": 7, "fl": "function/Unsafe_IoFunction_of_String_Buffer_BadCase01-1.c" }
GepStmt: [Var209 <-- Var55]	
   call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %0, i8* align 16 %1, i64 20, i1 false), !dbg !22 { "ln": 10, "cl": 7, "fl": "function/Unsafe_IoFunction_of_String_Buffer_BadCase01-1.c" }
GepStmt: [Var210 <-- Var4]	
   call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %0, i8* align 16 %1, i64 20, i1 false), !dbg !22 { "ln": 10, "cl": 7, "fl": "function/Unsafe_IoFunction_of_String_Buffer_BadCase01-1.c" }
LoadStmt: [Var211 <-- Var210]	
   call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %0, i8* align 16 %1, i64 20, i1 false), !dbg !22 { "ln": 10, "cl": 7, "fl": "function/Unsafe_IoFunction_of_String_Buffer_BadCase01-1.c" }
StoreStmt: [Var209 <-- Var211]	
   call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %0, i8* align 16 %1, i64 20, i1 false), !dbg !22 { "ln": 10, "cl": 7, "fl": "function/Unsafe_IoFunction_of_String_Buffer_BadCase01-1.c" }
GepStmt: [Var212 <-- Var55]	
   call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %0, i8* align 16 %1, i64 20, i1 false), !dbg !22 { "ln": 10, "cl": 7, "fl": "function/Unsafe_IoFunction_of_String_Buffer_BadCase01-1.c" }
GepStmt: [Var213 <-- Var4]	
   call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %0, i8* align 16 %1, i64 20, i1 false), !dbg !22 { "ln": 10, "cl": 7, "fl": "function/Unsafe_IoFunction_of_String_Buffer_BadCase01-1.c" }
LoadStmt: [Var214 <-- Var213]	
   call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %0, i8* align 16 %1, i64 20, i1 false), !dbg !22 { "ln": 10, "cl": 7, "fl": "function/Unsafe_IoFunction_of_String_Buffer_BadCase01-1.c" }
StoreStmt: [Var212 <-- Var214]	
   call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %0, i8* align 16 %1, i64 20, i1 false), !dbg !22 { "ln": 10, "cl": 7, "fl": "function/Unsafe_IoFunction_of_String_Buffer_BadCase01-1.c" }
GepStmt: [Var215 <-- Var55]	
   call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %0, i8* align 16 %1, i64 20, i1 false), !dbg !22 { "ln": 10, "cl": 7, "fl": "function/Unsafe_IoFunction_of_String_Buffer_BadCase01-1.c" }
GepStmt: [Var216 <-- Var4]	
   call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %0, i8* align 16 %1, i64 20, i1 false), !dbg !22 { "ln": 10, "cl": 7, "fl": "function/Unsafe_IoFunction_of_String_Buffer_BadCase01-1.c" }
LoadStmt: [Var217 <-- Var216]	
   call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %0, i8* align 16 %1, i64 20, i1 false), !dbg !22 { "ln": 10, "cl": 7, "fl": "function/Unsafe_IoFunction_of_String_Buffer_BadCase01-1.c" }
StoreStmt: [Var215 <-- Var217]	
   call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %0, i8* align 16 %1, i64 20, i1 false), !dbg !22 { "ln": 10, "cl": 7, "fl": "function/Unsafe_IoFunction_of_String_Buffer_BadCase01-1.c" }
GepStmt: [Var218 <-- Var55]	
   call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %0, i8* align 16 %1, i64 20, i1 false), !dbg !22 { "ln": 10, "cl": 7, "fl": "function/Unsafe_IoFunction_of_String_Buffer_BadCase01-1.c" }
GepStmt: [Var219 <-- Var4]	
   call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %0, i8* align 16 %1, i64 20, i1 false), !dbg !22 { "ln": 10, "cl": 7, "fl": "function/Unsafe_IoFunction_of_String_Buffer_BadCase01-1.c" }
LoadStmt: [Var220 <-- Var219]	
   call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %0, i8* align 16 %1, i64 20, i1 false), !dbg !22 { "ln": 10, "cl": 7, "fl": "function/Unsafe_IoFunction_of_String_Buffer_BadCase01-1.c" }
StoreStmt: [Var218 <-- Var220]	
   call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %0, i8* align 16 %1, i64 20, i1 false), !dbg !22 { "ln": 10, "cl": 7, "fl": "function/Unsafe_IoFunction_of_String_Buffer_BadCase01-1.c" }
GepStmt: [Var221 <-- Var55]	
   call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %0, i8* align 16 %1, i64 20, i1 false), !dbg !22 { "ln": 10, "cl": 7, "fl": "function/Unsafe_IoFunction_of_String_Buffer_BadCase01-1.c" }
GepStmt: [Var222 <-- Var4]	
   call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %0, i8* align 16 %1, i64 20, i1 false), !dbg !22 { "ln": 10, "cl": 7, "fl": "function/Unsafe_IoFunction_of_String_Buffer_BadCase01-1.c" }
LoadStmt: [Var223 <-- Var222]	
   call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %0, i8* align 16 %1, i64 20, i1 false), !dbg !22 { "ln": 10, "cl": 7, "fl": "function/Unsafe_IoFunction_of_String_Buffer_BadCase01-1.c" }
StoreStmt: [Var221 <-- Var223]	
   call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %0, i8* align 16 %1, i64 20, i1 false), !dbg !22 { "ln": 10, "cl": 7, "fl": "function/Unsafe_IoFunction_of_String_Buffer_BadCase01-1.c" }
GepStmt: [Var224 <-- Var55]	
   call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %0, i8* align 16 %1, i64 20, i1 false), !dbg !22 { "ln": 10, "cl": 7, "fl": "function/Unsafe_IoFunction_of_String_Buffer_BadCase01-1.c" }
GepStmt: [Var225 <-- Var4]	
   call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %0, i8* align 16 %1, i64 20, i1 false), !dbg !22 { "ln": 10, "cl": 7, "fl": "function/Unsafe_IoFunction_of_String_Buffer_BadCase01-1.c" }
LoadStmt: [Var226 <-- Var225]	
   call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %0, i8* align 16 %1, i64 20, i1 false), !dbg !22 { "ln": 10, "cl": 7, "fl": "function/Unsafe_IoFunction_of_String_Buffer_BadCase01-1.c" }
StoreStmt: [Var224 <-- Var226]	
   call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %0, i8* align 16 %1, i64 20, i1 false), !dbg !22 { "ln": 10, "cl": 7, "fl": "function/Unsafe_IoFunction_of_String_Buffer_BadCase01-1.c" }
CopyStmt: [Var57 <-- Var0]	
   call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %0, i8* align 16 %1, i64 20, i1 false), !dbg !22 { "ln": 10, "cl": 7, "fl": "function/Unsafe_IoFunction_of_String_Buffer_BadCase01-1.c" }
arr type size: 14
arr type size: 14
Buffer Overflow Check Safe
[20 x i8]*, byteOffset:[0, 0]
Buffer Overflow Check Safe
arr type size: 14
arr type size: 14
Buffer Overflow Check Safe
[20 x i8]*, byteOffset:[0, 0]
Buffer Overflow Check Safe
arr type size: 14
arr type size: 14
Buffer Overflow Check Safe
[20 x i8]*, byteOffset:[0, 0]
Buffer Overflow Check Safe
arr type size: 14
arr type size: 14
Buffer Overflow Check Safe
[20 x i8]*, byteOffset:[0, 0]
Buffer Overflow Check Safe
arr type size: 14
arr type size: 14
Buffer Overflow Check Safe
[20 x i8]*, byteOffset:[0, 0]
Buffer Overflow Check Safe
arr type size: 14
arr type size: 14
Buffer Overflow Check Safe
[20 x i8]*, byteOffset:[0, 0]
Buffer Overflow Check Safe
arr type size: 14
arr type size: 14
Buffer Overflow Check Safe
[20 x i8]*, byteOffset:[0, 0]
Buffer Overflow Check Safe
arr type size: 14
arr type size: 14
Buffer Overflow Check Safe
[20 x i8]*, byteOffset:[0, 0]
Buffer Overflow Check Safe
arr type size: 14
arr type size: 14
Buffer Overflow Check Safe
[20 x i8]*, byteOffset:[0, 0]
Buffer Overflow Check Safe
arr type size: 14
arr type size: 14
Buffer Overflow Check Safe
[20 x i8]*, byteOffset:[0, 0]
Buffer Overflow Check Safe
arr type size: 14
arr type size: 14
Buffer Overflow Check Safe
[20 x i8]*, byteOffset:[0, 0]
Buffer Overflow Check Safe
arr type size: 14
arr type size: 14
Buffer Overflow Check Safe
[20 x i8]*, byteOffset:[0, 0]
Buffer Overflow Check Safe
arr type size: 14
arr type size: 14
Buffer Overflow Check Safe
[20 x i8]*, byteOffset:[0, 0]
Buffer Overflow Check Safe
arr type size: 14
arr type size: 14
Buffer Overflow Check Safe
[20 x i8]*, byteOffset:[0, 0]
Buffer Overflow Check Safe
arr type size: 14
arr type size: 14
Buffer Overflow Check Safe
[20 x i8]*, byteOffset:[0, 0]
Buffer Overflow Check Safe
arr type size: 14
arr type size: 14
Buffer Overflow Check Safe
[20 x i8]*, byteOffset:[0, 0]
Buffer Overflow Check Safe
arr type size: 14
arr type size: 14
Buffer Overflow Check Safe
[20 x i8]*, byteOffset:[0, 0]
Buffer Overflow Check Safe
arr type size: 14
arr type size: 14
Buffer Overflow Check Safe
[20 x i8]*, byteOffset:[0, 0]
Buffer Overflow Check Safe
arr type size: 14
arr type size: 14
Buffer Overflow Check Safe
[20 x i8]*, byteOffset:[0, 0]
Buffer Overflow Check Safe
arr type size: 14
arr type size: 14
Buffer Overflow Check Safe
[20 x i8]*, byteOffset:[0, 0]
Buffer Overflow Check Safe
arr type size: 14
arr type size: 14
Buffer Overflow Check Safe
[20 x i8]*, byteOffset:[0, 0]
Buffer Overflow Check Safe
[20 x i8]*, byteOffset:[0, 0]
arr type size: 14
-----------Var and Value-----------
Var1	 Value: [-INF, +INF]
Var260	 Value: [104, 104]
Var261	 Value: [101, 101]
Var262	 Value: [108, 108]
Var263	 Value: [108, 108]
Var264	 Value: [111, 111]
Var265	 Value: [0, 0]
Var266	 Value: [0, 0]
Var267	 Value: [0, 0]
Var268	 Value: [0, 0]
Var269	 Value: [0, 0]
Var270	 Value: [47, 47]
Var271	 Value: [117, 117]
Var272	 Value: [115, 115]
Var273	 Value: [114, 114]
Var274	 Value: [47, 47]
Var275	 Value: [98, 98]
Var276	 Value: [105, 105]
Var277	 Value: [110, 110]
Var278	 Value: [47, 47]
Var279	 Value: [99, 99]
Var280	 Value: [97, 97]
Var281	 Value: [116, 116]
Var282	 Value: [0, 0]
Var283	 Value: [0, 0]
Var284	 Value: [0, 0]
Var285	 Value: [0, 0]
Var286	 Value: [0, 0]
Var287	 Value: [0, 0]
Var288	 Value: [0, 0]
Var289	 Value: [0, 0]
Var0	 Value: [ 0x7f000000(0) ,]
Var47	 Value: [ 0x7f000104(260) ,]
-----------------------------------------
IntraICFGNode9 {fun: Unsafe_IoFunction_of_String_Buffer_case01_Bad_01{ "ln": 12, "cl": 2, "fl": "function/Unsafe_IoFunction_of_String_Buffer_BadCase01-1.c" }}
GepStmt: [Var64 <-- Var50]	
   %arraydecay = getelementptr inbounds [20 x i8], [20 x i8]* %cmd, i64 0, i64 0, !dbg !23 { "ln": 12, "cl": 2, "fl": "function/Unsafe_IoFunction_of_String_Buffer_BadCase01-1.c" }
[20 x i8]*, byteOffset:[0, 0]
arr type size: 14
arr type size: 14
Buffer Overflow Check Safe
-----------Var and Value-----------
Var1	 Value: [-INF, +INF]
Var260	 Value: [104, 104]
Var261	 Value: [101, 101]
Var262	 Value: [108, 108]
Var263	 Value: [108, 108]
Var264	 Value: [111, 111]
Var265	 Value: [0, 0]
Var266	 Value: [0, 0]
Var267	 Value: [0, 0]
Var268	 Value: [0, 0]
Var269	 Value: [0, 0]
Var270	 Value: [47, 47]
Var271	 Value: [117, 117]
Var272	 Value: [115, 115]
Var273	 Value: [114, 114]
Var274	 Value: [47, 47]
Var275	 Value: [98, 98]
Var276	 Value: [105, 105]
Var277	 Value: [110, 110]
Var278	 Value: [47, 47]
Var279	 Value: [99, 99]
Var280	 Value: [97, 97]
Var281	 Value: [116, 116]
Var282	 Value: [0, 0]
Var283	 Value: [0, 0]
Var284	 Value: [0, 0]
Var285	 Value: [0, 0]
Var286	 Value: [0, 0]
Var287	 Value: [0, 0]
Var288	 Value: [0, 0]
Var289	 Value: [0, 0]
Var0	 Value: [ 0x7f000000(0) ,]
Var47	 Value: [ 0x7f000104(260) ,]
-----------------------------------------
IntraICFGNode10 {fun: Unsafe_IoFunction_of_String_Buffer_case01_Bad_01{ "ln": 12, "cl": 2, "fl": "function/Unsafe_IoFunction_of_String_Buffer_BadCase01-1.c" }}
LoadStmt: [Var67 <-- Var46]	
   %2 = load i8*, i8** %userinput.addr, align 8, !dbg !23 { "ln": 12, "cl": 2, "fl": "function/Unsafe_IoFunction_of_String_Buffer_BadCase01-1.c" }
-----------Var and Value-----------
Var1	 Value: [-INF, +INF]
Var260	 Value: [104, 104]
Var261	 Value: [101, 101]
Var262	 Value: [108, 108]
Var263	 Value: [108, 108]
Var264	 Value: [111, 111]
Var265	 Value: [0, 0]
Var266	 Value: [0, 0]
Var267	 Value: [0, 0]
Var268	 Value: [0, 0]
Var269	 Value: [0, 0]
Var270	 Value: [47, 47]
Var271	 Value: [117, 117]
Var272	 Value: [115, 115]
Var273	 Value: [114, 114]
Var274	 Value: [47, 47]
Var275	 Value: [98, 98]
Var276	 Value: [105, 105]
Var277	 Value: [110, 110]
Var278	 Value: [47, 47]
Var279	 Value: [99, 99]
Var280	 Value: [97, 97]
Var281	 Value: [116, 116]
Var282	 Value: [0, 0]
Var283	 Value: [0, 0]
Var284	 Value: [0, 0]
Var285	 Value: [0, 0]
Var286	 Value: [0, 0]
Var287	 Value: [0, 0]
Var288	 Value: [0, 0]
Var289	 Value: [0, 0]
Var0	 Value: [ 0x7f000000(0) ,]
Var47	 Value: [ 0x7f000104(260) ,]
-----------------------------------------
CallICFGNode11 {fun: Unsafe_IoFunction_of_String_Buffer_case01_Bad_01{ "ln": 12, "cl": 2, "fl": "function/Unsafe_IoFunction_of_String_Buffer_BadCase01-1.c" }}
GepStmt: [Var227 <-- Var50]	
   %call = call i8* @__strcat_chk(i8* noundef %arraydecay, i8* noundef %2, i64 noundef 20) #4, !dbg !23 { "ln": 12, "cl": 2, "fl": "function/Unsafe_IoFunction_of_String_Buffer_BadCase01-1.c" }
GepStmt: [Var228 <-- Var67]	
   %call = call i8* @__strcat_chk(i8* noundef %arraydecay, i8* noundef %2, i64 noundef 20) #4, !dbg !23 { "ln": 12, "cl": 2, "fl": "function/Unsafe_IoFunction_of_String_Buffer_BadCase01-1.c" }
LoadStmt: [Var229 <-- Var228]	
   %call = call i8* @__strcat_chk(i8* noundef %arraydecay, i8* noundef %2, i64 noundef 20) #4, !dbg !23 { "ln": 12, "cl": 2, "fl": "function/Unsafe_IoFunction_of_String_Buffer_BadCase01-1.c" }
StoreStmt: [Var227 <-- Var229]	
   %call = call i8* @__strcat_chk(i8* noundef %arraydecay, i8* noundef %2, i64 noundef 20) #4, !dbg !23 { "ln": 12, "cl": 2, "fl": "function/Unsafe_IoFunction_of_String_Buffer_BadCase01-1.c" }
CopyStmt: [Var68 <-- Var0]	
   %call = call i8* @__strcat_chk(i8* noundef %arraydecay, i8* noundef %2, i64 noundef 20) #4, !dbg !23 { "ln": 12, "cl": 2, "fl": "function/Unsafe_IoFunction_of_String_Buffer_BadCase01-1.c" }
[20 x i8]*, byteOffset:[0, 0]
arr type size: 14
arr type size: 14
Buffer Overflow Check Safe
arr type size: a
arr type size: a
Buffer Overflow Check Safe
arr type size: a
arr type size: a
[20 x i8]*, byteOffset:[0, 0]
arr type size: 14
arr type size: 14
[20 x i8]*, byteOffset:[0, 0]
arr type size: 14
arr type size: 14
Buffer Overflow Check Safe
-----------Var and Value-----------
Var1	 Value: [-INF, +INF]
Var260	 Value: [104, 104]
Var261	 Value: [101, 101]
Var262	 Value: [108, 108]
Var263	 Value: [108, 108]
Var264	 Value: [111, 111]
Var265	 Value: [0, 0]
Var266	 Value: [0, 0]
Var267	 Value: [0, 0]
Var268	 Value: [0, 0]
Var269	 Value: [0, 0]
Var270	 Value: [104, 104]
Var271	 Value: [117, 117]
Var272	 Value: [115, 115]
Var273	 Value: [114, 114]
Var274	 Value: [47, 47]
Var275	 Value: [98, 98]
Var276	 Value: [105, 105]
Var277	 Value: [110, 110]
Var278	 Value: [47, 47]
Var279	 Value: [99, 99]
Var280	 Value: [97, 97]
Var281	 Value: [116, 116]
Var282	 Value: [104, 104]
Var283	 Value: [101, 101]
Var284	 Value: [108, 108]
Var285	 Value: [108, 108]
Var286	 Value: [111, 111]
Var287	 Value: [0, 0]
Var288	 Value: [0, 0]
Var289	 Value: [0, 0]
Var0	 Value: [ 0x7f000000(0) ,]
Var47	 Value: [ 0x7f000104(260) ,]
-----------------------------------------
IntraICFGNode13 {fun: Unsafe_IoFunction_of_String_Buffer_case01_Bad_01{ "ln": 13, "cl": 1, "fl": "function/Unsafe_IoFunction_of_String_Buffer_BadCase01-1.c" }}
   ret void, !dbg !24 { "ln": 13, "cl": 1, "fl": "function/Unsafe_IoFunction_of_String_Buffer_BadCase01-1.c" }
-----------Var and Value-----------
Var1	 Value: [-INF, +INF]
Var260	 Value: [104, 104]
Var261	 Value: [101, 101]
Var262	 Value: [108, 108]
Var263	 Value: [108, 108]
Var264	 Value: [111, 111]
Var265	 Value: [0, 0]
Var266	 Value: [0, 0]
Var267	 Value: [0, 0]
Var268	 Value: [0, 0]
Var269	 Value: [0, 0]
Var270	 Value: [104, 104]
Var271	 Value: [117, 117]
Var272	 Value: [115, 115]
Var273	 Value: [114, 114]
Var274	 Value: [47, 47]
Var275	 Value: [98, 98]
Var276	 Value: [105, 105]
Var277	 Value: [110, 110]
Var278	 Value: [47, 47]
Var279	 Value: [99, 99]
Var280	 Value: [97, 97]
Var281	 Value: [116, 116]
Var282	 Value: [104, 104]
Var283	 Value: [101, 101]
Var284	 Value: [108, 108]
Var285	 Value: [108, 108]
Var286	 Value: [111, 111]
Var287	 Value: [0, 0]
Var288	 Value: [0, 0]
Var289	 Value: [0, 0]
Var0	 Value: [ 0x7f000000(0) ,]
Var47	 Value: [ 0x7f000104(260) ,]
-----------------------------------------
-----------Var and Value-----------
Var1	 Value: [-INF, +INF]
Var260	 Value: [104, 104]
Var261	 Value: [101, 101]
Var262	 Value: [108, 108]
Var263	 Value: [108, 108]
Var264	 Value: [111, 111]
Var265	 Value: [0, 0]
Var266	 Value: [0, 0]
Var267	 Value: [0, 0]
Var268	 Value: [0, 0]
Var269	 Value: [0, 0]
Var270	 Value: [104, 104]
Var271	 Value: [117, 117]
Var272	 Value: [115, 115]
Var273	 Value: [114, 114]
Var274	 Value: [47, 47]
Var275	 Value: [98, 98]
Var276	 Value: [105, 105]
Var277	 Value: [110, 110]
Var278	 Value: [47, 47]
Var279	 Value: [99, 99]
Var280	 Value: [97, 97]
Var281	 Value: [116, 116]
Var282	 Value: [104, 104]
Var283	 Value: [101, 101]
Var284	 Value: [108, 108]
Var285	 Value: [108, 108]
Var286	 Value: [111, 111]
Var287	 Value: [0, 0]
Var288	 Value: [0, 0]
Var289	 Value: [0, 0]
Var0	 Value: [ 0x7f000000(0) ,]
Var47	 Value: [ 0x7f000104(260) ,]
-----------------------------------------
FunExitICFGNode14 {fun: Unsafe_IoFunction_of_String_Buffer_case01_Bad_01{ "ln": 8, "fl": "function/Unsafe_IoFunction_of_String_Buffer_BadCase01-1.c" }}
-----------Var and Value-----------
Var1	 Value: [-INF, +INF]
Var260	 Value: [104, 104]
Var261	 Value: [101, 101]
Var262	 Value: [108, 108]
Var263	 Value: [108, 108]
Var264	 Value: [111, 111]
Var265	 Value: [0, 0]
Var266	 Value: [0, 0]
Var267	 Value: [0, 0]
Var268	 Value: [0, 0]
Var269	 Value: [0, 0]
Var270	 Value: [104, 104]
Var271	 Value: [117, 117]
Var272	 Value: [115, 115]
Var273	 Value: [114, 114]
Var274	 Value: [47, 47]
Var275	 Value: [98, 98]
Var276	 Value: [105, 105]
Var277	 Value: [110, 110]
Var278	 Value: [47, 47]
Var279	 Value: [99, 99]
Var280	 Value: [97, 97]
Var281	 Value: [116, 116]
Var282	 Value: [104, 104]
Var283	 Value: [101, 101]
Var284	 Value: [108, 108]
Var285	 Value: [108, 108]
Var286	 Value: [111, 111]
Var287	 Value: [0, 0]
Var288	 Value: [0, 0]
Var289	 Value: [0, 0]
Var0	 Value: [ 0x7f000000(0) ,]
Var47	 Value: [ 0x7f000104(260) ,]
-----------------------------------------
RetICFGNode23 {fun: main{ "ln": 17, "cl": 5, "fl": "function/Unsafe_IoFunction_of_String_Buffer_BadCase01-1.c" }}
-----------Var and Value-----------
Var1	 Value: [-INF, +INF]
Var260	 Value: [104, 104]
Var261	 Value: [101, 101]
Var262	 Value: [108, 108]
Var263	 Value: [108, 108]
Var264	 Value: [111, 111]
Var265	 Value: [0, 0]
Var266	 Value: [0, 0]
Var267	 Value: [0, 0]
Var268	 Value: [0, 0]
Var269	 Value: [0, 0]
Var270	 Value: [104, 104]
Var271	 Value: [117, 117]
Var272	 Value: [115, 115]
Var273	 Value: [114, 114]
Var274	 Value: [47, 47]
Var275	 Value: [98, 98]
Var276	 Value: [105, 105]
Var277	 Value: [110, 110]
Var278	 Value: [47, 47]
Var279	 Value: [99, 99]
Var280	 Value: [97, 97]
Var281	 Value: [116, 116]
Var282	 Value: [104, 104]
Var283	 Value: [101, 101]
Var284	 Value: [108, 108]
Var285	 Value: [108, 108]
Var286	 Value: [111, 111]
Var287	 Value: [0, 0]
Var288	 Value: [0, 0]
Var289	 Value: [0, 0]
Var0	 Value: [ 0x7f000000(0) ,]
Var47	 Value: [ 0x7f000104(260) ,]
-----------------------------------------
IntraICFGNode24 {fun: main{ "ln": 18, "cl": 1, "fl": "function/Unsafe_IoFunction_of_String_Buffer_BadCase01-1.c" }}
   ret i32 0, !dbg !23 { "ln": 18, "cl": 1, "fl": "function/Unsafe_IoFunction_of_String_Buffer_BadCase01-1.c" }
-----------Var and Value-----------
Var1	 Value: [-INF, +INF]
Var260	 Value: [104, 104]
Var261	 Value: [101, 101]
Var262	 Value: [108, 108]
Var263	 Value: [108, 108]
Var264	 Value: [111, 111]
Var265	 Value: [0, 0]
Var266	 Value: [0, 0]
Var267	 Value: [0, 0]
Var268	 Value: [0, 0]
Var269	 Value: [0, 0]
Var270	 Value: [104, 104]
Var271	 Value: [117, 117]
Var272	 Value: [115, 115]
Var273	 Value: [114, 114]
Var274	 Value: [47, 47]
Var275	 Value: [98, 98]
Var276	 Value: [105, 105]
Var277	 Value: [110, 110]
Var278	 Value: [47, 47]
Var279	 Value: [99, 99]
Var280	 Value: [97, 97]
Var281	 Value: [116, 116]
Var282	 Value: [104, 104]
Var283	 Value: [101, 101]
Var284	 Value: [108, 108]
Var285	 Value: [108, 108]
Var286	 Value: [111, 111]
Var287	 Value: [0, 0]
Var288	 Value: [0, 0]
Var289	 Value: [0, 0]
Var0	 Value: [ 0x7f000000(0) ,]
Var47	 Value: [ 0x7f000104(260) ,]
-----------------------------------------
