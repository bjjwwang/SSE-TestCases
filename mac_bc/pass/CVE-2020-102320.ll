; ModuleID = 'mac_bc/pass/CVE-2020-102320.ll'
source_filename = "/Users/jiaweiwang/CLionProjects/0130-db/svf-z3/SSE-TestCases/src/pass/CVE-2020-102320.c"
target datalayout = "e-m:o-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-apple-macosx12.0.0"

%struct.tm = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, i8* }
%struct.TSK_FS_META = type { i64, i64, i64 }

@.str = private unnamed_addr constant [26 x i8] c"0000-00-00 00:00:00 (UTC)\00", align 1
@.str.1 = private unnamed_addr constant [35 x i8] c"%.4d-%.2d-%.2d %.2d:%.2d:%.2d (%s)\00", align 1
@tzname = global [2 x i8*] zeroinitializer, align 16, !dbg !0
@.str.2 = private unnamed_addr constant [4 x i8] c"%s\0A\00", align 1
@.str.3 = private unnamed_addr constant [24 x i8] c"\0AAdjusted Inode Times:\0A\00", align 1
@.str.4 = private unnamed_addr constant [14 x i8] c"Accessed:\09%s\0A\00", align 1
@.str.5 = private unnamed_addr constant [19 x i8] c"File Modified:\09%s\0A\00", align 1
@.str.6 = private unnamed_addr constant [20 x i8] c"Inode Modified:\09%s\0A\00", align 1
@.str.7 = private unnamed_addr constant [22 x i8] c"Eastern Standard Time\00", align 1
@.str.8 = private unnamed_addr constant [22 x i8] c"Eastern Daylight Time\00", align 1

; Function Attrs: noinline nounwind optnone ssp uwtable
define i8* @tsk_fs_time_to_str(i64 noundef %time, i8* noundef %buf) #0 !dbg !20 {
entry:
  %time.addr = alloca i64, align 8
  %buf.addr = alloca i8*, align 8
  %tmTime = alloca %struct.tm*, align 8
  store i64 %time, i64* %time.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %time.addr, metadata !29, metadata !DIExpression()), !dbg !30
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !31, metadata !DIExpression()), !dbg !32
  %0 = load i8*, i8** %buf.addr, align 8, !dbg !33
  %arrayidx = getelementptr inbounds i8, i8* %0, i64 0, !dbg !33
  store i8 0, i8* %arrayidx, align 1, !dbg !34
  %1 = load i64, i64* %time.addr, align 8, !dbg !35
  %cmp = icmp sle i64 %1, 0, !dbg !37
  br i1 %cmp, label %if.then, label %if.else, !dbg !38

if.then:                                          ; preds = %entry
  %2 = load i8*, i8** %buf.addr, align 8, !dbg !39
  %3 = load i8*, i8** %buf.addr, align 8, !dbg !39
  %4 = call i64 @llvm.objectsize.i64.p0i8(i8* %3, i1 false, i1 true, i1 false), !dbg !39
  %call = call i8* @__strncpy_chk(i8* noundef %2, i8* noundef getelementptr inbounds ([26 x i8], [26 x i8]* @.str, i64 0, i64 0), i64 noundef 128, i64 noundef %4) #4, !dbg !39
  br label %if.end, !dbg !41

if.else:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct.tm** %tmTime, metadata !42, metadata !DIExpression()), !dbg !59
  %call1 = call %struct.tm* @localtime(i64* noundef %time.addr), !dbg !60
  store %struct.tm* %call1, %struct.tm** %tmTime, align 8, !dbg !59
  %5 = load i8*, i8** %buf.addr, align 8, !dbg !61
  %6 = load i8*, i8** %buf.addr, align 8, !dbg !61
  %7 = call i64 @llvm.objectsize.i64.p0i8(i8* %6, i1 false, i1 true, i1 false), !dbg !61
  %8 = load %struct.tm*, %struct.tm** %tmTime, align 8, !dbg !61
  %tm_year = getelementptr inbounds %struct.tm, %struct.tm* %8, i32 0, i32 5, !dbg !61
  %9 = load i32, i32* %tm_year, align 4, !dbg !61
  %add = add nsw i32 %9, 1900, !dbg !61
  %10 = load %struct.tm*, %struct.tm** %tmTime, align 8, !dbg !61
  %tm_mon = getelementptr inbounds %struct.tm, %struct.tm* %10, i32 0, i32 4, !dbg !61
  %11 = load i32, i32* %tm_mon, align 8, !dbg !61
  %add2 = add nsw i32 %11, 1, !dbg !61
  %12 = load %struct.tm*, %struct.tm** %tmTime, align 8, !dbg !61
  %tm_mday = getelementptr inbounds %struct.tm, %struct.tm* %12, i32 0, i32 3, !dbg !61
  %13 = load i32, i32* %tm_mday, align 4, !dbg !61
  %14 = load %struct.tm*, %struct.tm** %tmTime, align 8, !dbg !61
  %tm_hour = getelementptr inbounds %struct.tm, %struct.tm* %14, i32 0, i32 2, !dbg !61
  %15 = load i32, i32* %tm_hour, align 8, !dbg !61
  %16 = load %struct.tm*, %struct.tm** %tmTime, align 8, !dbg !61
  %tm_min = getelementptr inbounds %struct.tm, %struct.tm* %16, i32 0, i32 1, !dbg !61
  %17 = load i32, i32* %tm_min, align 4, !dbg !61
  %18 = load %struct.tm*, %struct.tm** %tmTime, align 8, !dbg !61
  %tm_sec = getelementptr inbounds %struct.tm, %struct.tm* %18, i32 0, i32 0, !dbg !61
  %19 = load i32, i32* %tm_sec, align 8, !dbg !61
  %20 = load %struct.tm*, %struct.tm** %tmTime, align 8, !dbg !61
  %tm_isdst = getelementptr inbounds %struct.tm, %struct.tm* %20, i32 0, i32 8, !dbg !61
  %21 = load i32, i32* %tm_isdst, align 8, !dbg !61
  %cmp3 = icmp eq i32 %21, 0, !dbg !61
  %22 = zext i1 %cmp3 to i64, !dbg !61
  %cond = select i1 %cmp3, i32 0, i32 1, !dbg !61
  %idxprom = sext i32 %cond to i64, !dbg !61
  %arrayidx4 = getelementptr inbounds [2 x i8*], [2 x i8*]* @tzname, i64 0, i64 %idxprom, !dbg !61
  %23 = load i8*, i8** %arrayidx4, align 8, !dbg !61
  %call5 = call i32 (i8*, i64, i32, i64, i8*, ...) @__snprintf_chk(i8* noundef %5, i64 noundef 128, i32 noundef 0, i64 noundef %7, i8* noundef getelementptr inbounds ([35 x i8], [35 x i8]* @.str.1, i64 0, i64 0), i32 noundef %add, i32 noundef %add2, i32 noundef %13, i32 noundef %15, i32 noundef %17, i32 noundef %19, i8* noundef %23), !dbg !61
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %24 = load i8*, i8** %buf.addr, align 8, !dbg !62
  %call6 = call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([4 x i8], [4 x i8]* @.str.2, i64 0, i64 0), i8* noundef %24), !dbg !63
  %25 = load i8*, i8** %buf.addr, align 8, !dbg !64
  ret i8* %25, !dbg !65
}

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

; Function Attrs: nounwind
declare i8* @__strncpy_chk(i8* noundef, i8* noundef, i64 noundef, i64 noundef) #2

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare i64 @llvm.objectsize.i64.p0i8(i8*, i1 immarg, i1 immarg, i1 immarg) #1

declare %struct.tm* @localtime(i64* noundef) #3

declare i32 @__snprintf_chk(i8* noundef, i64 noundef, i32 noundef, i64 noundef, i8* noundef, ...) #3

declare i32 @printf(i8* noundef, ...) #3

; Function Attrs: noinline nounwind optnone ssp uwtable
define void @yaffsfs_istat(%struct.TSK_FS_META* noundef %fs_meta) #0 !dbg !66 {
entry:
  %fs_meta.addr = alloca %struct.TSK_FS_META*, align 8
  %timeBuf = alloca [32 x i8], align 16
  store %struct.TSK_FS_META* %fs_meta, %struct.TSK_FS_META** %fs_meta.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.TSK_FS_META** %fs_meta.addr, metadata !76, metadata !DIExpression()), !dbg !77
  call void @llvm.dbg.declare(metadata [32 x i8]* %timeBuf, metadata !78, metadata !DIExpression()), !dbg !82
  %call = call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([24 x i8], [24 x i8]* @.str.3, i64 0, i64 0)), !dbg !83
  %0 = load %struct.TSK_FS_META*, %struct.TSK_FS_META** %fs_meta.addr, align 8, !dbg !86
  %atime = getelementptr inbounds %struct.TSK_FS_META, %struct.TSK_FS_META* %0, i32 0, i32 1, !dbg !87
  %1 = load i64, i64* %atime, align 8, !dbg !87
  %arraydecay = getelementptr inbounds [32 x i8], [32 x i8]* %timeBuf, i64 0, i64 0, !dbg !88
  %call1 = call i8* @tsk_fs_time_to_str(i64 noundef %1, i8* noundef %arraydecay), !dbg !89
  %call2 = call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([14 x i8], [14 x i8]* @.str.4, i64 0, i64 0), i8* noundef %call1), !dbg !90
  %2 = load %struct.TSK_FS_META*, %struct.TSK_FS_META** %fs_meta.addr, align 8, !dbg !91
  %mtime = getelementptr inbounds %struct.TSK_FS_META, %struct.TSK_FS_META* %2, i32 0, i32 0, !dbg !92
  %3 = load i64, i64* %mtime, align 8, !dbg !92
  %arraydecay3 = getelementptr inbounds [32 x i8], [32 x i8]* %timeBuf, i64 0, i64 0, !dbg !93
  %call4 = call i8* @tsk_fs_time_to_str(i64 noundef %3, i8* noundef %arraydecay3), !dbg !94
  %call5 = call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([19 x i8], [19 x i8]* @.str.5, i64 0, i64 0), i8* noundef %call4), !dbg !95
  %4 = load %struct.TSK_FS_META*, %struct.TSK_FS_META** %fs_meta.addr, align 8, !dbg !96
  %ctime = getelementptr inbounds %struct.TSK_FS_META, %struct.TSK_FS_META* %4, i32 0, i32 2, !dbg !97
  %5 = load i64, i64* %ctime, align 8, !dbg !97
  %arraydecay6 = getelementptr inbounds [32 x i8], [32 x i8]* %timeBuf, i64 0, i64 0, !dbg !98
  %call7 = call i8* @tsk_fs_time_to_str(i64 noundef %5, i8* noundef %arraydecay6), !dbg !99
  %call8 = call i32 (i8*, ...) @printf(i8* noundef getelementptr inbounds ([20 x i8], [20 x i8]* @.str.6, i64 0, i64 0), i8* noundef %call7), !dbg !100
  ret void, !dbg !101
}

; Function Attrs: noinline nounwind optnone ssp uwtable
define i32 @main() #0 !dbg !102 {
entry:
  %fs_meta = alloca %struct.TSK_FS_META, align 8
  store i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.7, i64 0, i64 0), i8** getelementptr inbounds ([2 x i8*], [2 x i8*]* @tzname, i64 0, i64 0), align 16, !dbg !104
  store i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.8, i64 0, i64 0), i8** getelementptr inbounds ([2 x i8*], [2 x i8*]* @tzname, i64 0, i64 1), align 8, !dbg !107
  call void @llvm.dbg.declare(metadata %struct.TSK_FS_META* %fs_meta, metadata !108, metadata !DIExpression()), !dbg !109
  %mtime = getelementptr inbounds %struct.TSK_FS_META, %struct.TSK_FS_META* %fs_meta, i32 0, i32 0, !dbg !110
  store i64 1641038400, i64* %mtime, align 8, !dbg !111
  %atime = getelementptr inbounds %struct.TSK_FS_META, %struct.TSK_FS_META* %fs_meta, i32 0, i32 1, !dbg !112
  store i64 1641038400, i64* %atime, align 8, !dbg !113
  %ctime = getelementptr inbounds %struct.TSK_FS_META, %struct.TSK_FS_META* %fs_meta, i32 0, i32 2, !dbg !114
  store i64 1641038400, i64* %ctime, align 8, !dbg !115
  call void @yaffsfs_istat(%struct.TSK_FS_META* noundef %fs_meta), !dbg !116
  ret i32 0, !dbg !117
}

attributes #0 = { noinline nounwind optnone ssp uwtable "frame-pointer"="all" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="penryn" "target-features"="+cx16,+cx8,+fxsr,+mmx,+sahf,+sse,+sse2,+sse3,+sse4.1,+ssse3,+x87" "tune-cpu"="generic" }
attributes #1 = { nofree nosync nounwind readnone speculatable willreturn }
attributes #2 = { nounwind "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="penryn" "target-features"="+cx16,+cx8,+fxsr,+mmx,+sahf,+sse,+sse2,+sse3,+sse4.1,+ssse3,+x87" "tune-cpu"="generic" }
attributes #3 = { "frame-pointer"="all" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="penryn" "target-features"="+cx16,+cx8,+fxsr,+mmx,+sahf,+sse,+sse2,+sse3,+sse4.1,+ssse3,+x87" "tune-cpu"="generic" }
attributes #4 = { nounwind }

!llvm.dbg.cu = !{!2}
!llvm.module.flags = !{!13, !14, !15, !16, !17, !18}
!llvm.ident = !{!19}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "tzname", scope: !2, file: !7, line: 16, type: !8, isLocal: false, isDefinition: true)
!2 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "Homebrew clang version 14.0.6", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, retainedTypes: !4, globals: !6, splitDebugInlining: false, nameTableKind: None, sysroot: "/Library/Developer/CommandLineTools/SDKs/MacOSX12.sdk", sdk: "MacOSX12.sdk")
!3 = !DIFile(filename: "/Users/jiaweiwang/CLionProjects/0130-db/svf-z3/SSE-TestCases/src/pass/CVE-2020-102320.c", directory: "/Users/jiaweiwang/CLionProjects/0130-db/svf-z3/SSE-TestCases")
!4 = !{!5}
!5 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!6 = !{!0}
!7 = !DIFile(filename: "src/pass/CVE-2020-102320.c", directory: "/Users/jiaweiwang/CLionProjects/0130-db/svf-z3/SSE-TestCases")
!8 = !DICompositeType(tag: DW_TAG_array_type, baseType: !9, size: 128, elements: !11)
!9 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10, size: 64)
!10 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_signed_char)
!11 = !{!12}
!12 = !DISubrange(count: 2)
!13 = !{i32 7, !"Dwarf Version", i32 4}
!14 = !{i32 2, !"Debug Info Version", i32 3}
!15 = !{i32 1, !"wchar_size", i32 4}
!16 = !{i32 7, !"PIC Level", i32 2}
!17 = !{i32 7, !"uwtable", i32 1}
!18 = !{i32 7, !"frame-pointer", i32 2}
!19 = !{!"Homebrew clang version 14.0.6"}
!20 = distinct !DISubprogram(name: "tsk_fs_time_to_str", scope: !7, file: !7, line: 25, type: !21, scopeLine: 25, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !28)
!21 = !DISubroutineType(types: !22)
!22 = !{!9, !23, !9}
!23 = !DIDerivedType(tag: DW_TAG_typedef, name: "time_t", file: !24, line: 31, baseType: !25)
!24 = !DIFile(filename: "/Library/Developer/CommandLineTools/SDKs/MacOSX12.sdk/usr/include/sys/_types/_time_t.h", directory: "")
!25 = !DIDerivedType(tag: DW_TAG_typedef, name: "__darwin_time_t", file: !26, line: 122, baseType: !27)
!26 = !DIFile(filename: "/Library/Developer/CommandLineTools/SDKs/MacOSX12.sdk/usr/include/i386/_types.h", directory: "")
!27 = !DIBasicType(name: "long", size: 64, encoding: DW_ATE_signed)
!28 = !{}
!29 = !DILocalVariable(name: "time", arg: 1, scope: !20, file: !7, line: 25, type: !23)
!30 = !DILocation(line: 25, column: 34, scope: !20)
!31 = !DILocalVariable(name: "buf", arg: 2, scope: !20, file: !7, line: 25, type: !9)
!32 = !DILocation(line: 25, column: 45, scope: !20)
!33 = !DILocation(line: 26, column: 5, scope: !20)
!34 = !DILocation(line: 26, column: 12, scope: !20)
!35 = !DILocation(line: 27, column: 9, scope: !36)
!36 = distinct !DILexicalBlock(scope: !20, file: !7, line: 27, column: 9)
!37 = !DILocation(line: 27, column: 14, scope: !36)
!38 = !DILocation(line: 27, column: 9, scope: !20)
!39 = !DILocation(line: 28, column: 9, scope: !40)
!40 = distinct !DILexicalBlock(scope: !36, file: !7, line: 27, column: 20)
!41 = !DILocation(line: 29, column: 5, scope: !40)
!42 = !DILocalVariable(name: "tmTime", scope: !43, file: !7, line: 31, type: !44)
!43 = distinct !DILexicalBlock(scope: !36, file: !7, line: 30, column: 10)
!44 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !45, size: 64)
!45 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tm", file: !46, line: 75, size: 448, elements: !47)
!46 = !DIFile(filename: "/Library/Developer/CommandLineTools/SDKs/MacOSX12.sdk/usr/include/time.h", directory: "")
!47 = !{!48, !49, !50, !51, !52, !53, !54, !55, !56, !57, !58}
!48 = !DIDerivedType(tag: DW_TAG_member, name: "tm_sec", scope: !45, file: !46, line: 76, baseType: !5, size: 32)
!49 = !DIDerivedType(tag: DW_TAG_member, name: "tm_min", scope: !45, file: !46, line: 77, baseType: !5, size: 32, offset: 32)
!50 = !DIDerivedType(tag: DW_TAG_member, name: "tm_hour", scope: !45, file: !46, line: 78, baseType: !5, size: 32, offset: 64)
!51 = !DIDerivedType(tag: DW_TAG_member, name: "tm_mday", scope: !45, file: !46, line: 79, baseType: !5, size: 32, offset: 96)
!52 = !DIDerivedType(tag: DW_TAG_member, name: "tm_mon", scope: !45, file: !46, line: 80, baseType: !5, size: 32, offset: 128)
!53 = !DIDerivedType(tag: DW_TAG_member, name: "tm_year", scope: !45, file: !46, line: 81, baseType: !5, size: 32, offset: 160)
!54 = !DIDerivedType(tag: DW_TAG_member, name: "tm_wday", scope: !45, file: !46, line: 82, baseType: !5, size: 32, offset: 192)
!55 = !DIDerivedType(tag: DW_TAG_member, name: "tm_yday", scope: !45, file: !46, line: 83, baseType: !5, size: 32, offset: 224)
!56 = !DIDerivedType(tag: DW_TAG_member, name: "tm_isdst", scope: !45, file: !46, line: 84, baseType: !5, size: 32, offset: 256)
!57 = !DIDerivedType(tag: DW_TAG_member, name: "tm_gmtoff", scope: !45, file: !46, line: 85, baseType: !27, size: 64, offset: 320)
!58 = !DIDerivedType(tag: DW_TAG_member, name: "tm_zone", scope: !45, file: !46, line: 86, baseType: !9, size: 64, offset: 384)
!59 = !DILocation(line: 31, column: 20, scope: !43)
!60 = !DILocation(line: 31, column: 29, scope: !43)
!61 = !DILocation(line: 33, column: 9, scope: !43)
!62 = !DILocation(line: 42, column: 20, scope: !20)
!63 = !DILocation(line: 42, column: 5, scope: !20)
!64 = !DILocation(line: 43, column: 12, scope: !20)
!65 = !DILocation(line: 43, column: 5, scope: !20)
!66 = distinct !DISubprogram(name: "yaffsfs_istat", scope: !7, file: !7, line: 46, type: !67, scopeLine: 46, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !28)
!67 = !DISubroutineType(types: !68)
!68 = !{null, !69}
!69 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !70, size: 64)
!70 = !DIDerivedType(tag: DW_TAG_typedef, name: "TSK_FS_META", file: !7, line: 23, baseType: !71)
!71 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !7, line: 19, size: 192, elements: !72)
!72 = !{!73, !74, !75}
!73 = !DIDerivedType(tag: DW_TAG_member, name: "mtime", scope: !71, file: !7, line: 20, baseType: !23, size: 64)
!74 = !DIDerivedType(tag: DW_TAG_member, name: "atime", scope: !71, file: !7, line: 21, baseType: !23, size: 64, offset: 64)
!75 = !DIDerivedType(tag: DW_TAG_member, name: "ctime", scope: !71, file: !7, line: 22, baseType: !23, size: 64, offset: 128)
!76 = !DILocalVariable(name: "fs_meta", arg: 1, scope: !66, file: !7, line: 46, type: !69)
!77 = !DILocation(line: 46, column: 33, scope: !66)
!78 = !DILocalVariable(name: "timeBuf", scope: !66, file: !7, line: 47, type: !79)
!79 = !DICompositeType(tag: DW_TAG_array_type, baseType: !10, size: 256, elements: !80)
!80 = !{!81}
!81 = !DISubrange(count: 32)
!82 = !DILocation(line: 47, column: 10, scope: !66)
!83 = !DILocation(line: 50, column: 9, scope: !84)
!84 = distinct !DILexicalBlock(scope: !85, file: !7, line: 49, column: 15)
!85 = distinct !DILexicalBlock(scope: !66, file: !7, line: 49, column: 9)
!86 = !DILocation(line: 51, column: 54, scope: !84)
!87 = !DILocation(line: 51, column: 63, scope: !84)
!88 = !DILocation(line: 51, column: 70, scope: !84)
!89 = !DILocation(line: 51, column: 35, scope: !84)
!90 = !DILocation(line: 51, column: 9, scope: !84)
!91 = !DILocation(line: 52, column: 59, scope: !84)
!92 = !DILocation(line: 52, column: 68, scope: !84)
!93 = !DILocation(line: 52, column: 75, scope: !84)
!94 = !DILocation(line: 52, column: 40, scope: !84)
!95 = !DILocation(line: 52, column: 9, scope: !84)
!96 = !DILocation(line: 53, column: 60, scope: !84)
!97 = !DILocation(line: 53, column: 69, scope: !84)
!98 = !DILocation(line: 53, column: 76, scope: !84)
!99 = !DILocation(line: 53, column: 41, scope: !84)
!100 = !DILocation(line: 53, column: 9, scope: !84)
!101 = !DILocation(line: 55, column: 1, scope: !66)
!102 = distinct !DISubprogram(name: "main", scope: !7, file: !7, line: 57, type: !103, scopeLine: 57, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !28)
!103 = !DISubroutineType(types: !4)
!104 = !DILocation(line: 59, column: 19, scope: !105)
!105 = distinct !DILexicalBlock(scope: !106, file: !7, line: 58, column: 28)
!106 = distinct !DILexicalBlock(scope: !102, file: !7, line: 58, column: 8)
!107 = !DILocation(line: 60, column: 19, scope: !105)
!108 = !DILocalVariable(name: "fs_meta", scope: !102, file: !7, line: 67, type: !70)
!109 = !DILocation(line: 67, column: 17, scope: !102)
!110 = !DILocation(line: 68, column: 13, scope: !102)
!111 = !DILocation(line: 68, column: 19, scope: !102)
!112 = !DILocation(line: 69, column: 13, scope: !102)
!113 = !DILocation(line: 69, column: 19, scope: !102)
!114 = !DILocation(line: 70, column: 13, scope: !102)
!115 = !DILocation(line: 70, column: 19, scope: !102)
!116 = !DILocation(line: 71, column: 5, scope: !102)
!117 = !DILocation(line: 72, column: 1, scope: !102)
